"use strict";(self.webpackChunklukemurraynz=self.webpackChunklukemurraynz||[]).push([[4584],{81024:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>t,default:()=>l,frontMatter:()=>s,metadata:()=>o,toc:()=>p});var o=n(77312),i=n(74848),a=n(28453);const s={title:"Deploying Azure Service Groups with Terraform AzAPI",metaDescription:"Deploy Azure Service Groups with Terraform AzAPI to group resources across subscriptions for improved cloud governance.",tags:["Azure"],categories:["Azure"],authors:["Luke"],slug:"azure/service-groups-terraform-azapi",keywords:["Azure","Service Groups","Terraform","AzAPI","Cloud Governance","Platform Engineering","Resource Management"],description:"Deploy Azure Service Groups with Terraform AzAPI to group resources across subscriptions for improved cloud governance.",date:new Date("2025-07-06T05:45:39.743Z")},t=void 0,c={authorsImageUrls:[void 0]},p=[{value:"\ud83d\udcda Additional Resources",id:"-additional-resources",level:2}];function u(e){const r={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h2:"h2",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(r.p,{children:["Microsoft recently unveiled ",(0,i.jsx)(r.a,{href:"https://learn.microsoft.com/azure/governance/service-groups/overview?WT.mc_id=AZ-MVP-5004796",children:"Service Groups"})," in Azure, now available in limited public preview\u2014and they\u2019re already shaping up to be a game changer for cloud governance."]}),"\n",(0,i.jsx)(r.p,{children:"If you\u2019ve ever struggled with managing sprawling applications across multiple resource groups, subscriptions, and teams, Service Groups are designed with you in mind."}),"\n",(0,i.jsx)(r.p,{children:"Where Azure Policy, Resource Graph, Tags, and Management Groups give you compliance, visibility, and hierarchy, Service Groups add an entirely new dimension: flexible, application-centric grouping of your Azure resources\u2014without being limited by deployment boundaries."}),"\n",(0,i.jsx)(r.p,{children:"Imagine being able to view, report on, and manage an entire application or workload\u2014no matter where its resources live. Whether you\u2019re in FinOps trying to track costs, in Ops trying to view health, or a security lead wanting to understand exposure, Service Groups give you the lens you\u2019ve been missing."}),"\n",(0,i.jsxs)(r.p,{children:["Today we are going to look at using the ",(0,i.jsx)(r.a,{href:"https://learn.microsoft.com/azure/developer/terraform/overview-azapi-provider?WT.mc_id=AZ-MVP-5004796",children:"Terraform AzAPI"})," to deploy ",(0,i.jsx)(r.a,{href:"https://learn.microsoft.com/azure/governance/service-groups/overview?WT.mc_id=AZ-MVP-5004796",children:"Service Groups"})," in Azure."]}),"\n","\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.img,{alt:"Service Groups Overview",src:n(15394).A+"",width:"1280",height:"720"})}),"\n",(0,i.jsxs)(r.admonition,{type:"info",children:[(0,i.jsx)(r.p,{children:"Service Groups support up to 10 levels of nested hierarchy and let you aggregate resources based on projects, services, shared dependencies, or criticality\u2014even across multiple subscriptions or environments."}),(0,i.jsx)(r.p,{children:"They don\u2019t change RBAC or policy inheritance\u2014this isn\u2019t a new deployment scope. Instead, they work in parallel to your existing structure, offering clarity and insight without compromising security or control."}),(0,i.jsx)(r.p,{children:"Use them to:"}),(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"Create workload-centric views"}),"\n",(0,i.jsx)(r.li,{children:"Track shared service dependencies"}),"\n",(0,i.jsx)(r.li,{children:"Report and monitor costs across scattered resources"}),"\n",(0,i.jsx)(r.li,{children:"Visualize health and operational state holistically"}),"\n"]}),(0,i.jsxs)(r.p,{children:["As someone who works with complex environments every day, I see Service Groups as a long-overdue capability that simplifies cloud operations and bridges the gap between governance and agility. Make sure you check out a video I did on the ",(0,i.jsx)(r.a,{href:"https://youtu.be/64uj-syYv5Y",children:"Azure Service Groups"})," for further information."]})]}),"\n",(0,i.jsxs)(r.blockquote,{children:["\n",(0,i.jsxs)(r.p,{children:["It\u2019s still early days, but the flexibility, clarity, and insight Service Groups bring are already proving invaluable. If you're managing large Azure estates, ",(0,i.jsx)(r.a,{href:"https://aka.ms/sgp",children:"sign up for the preview"}),", test it out, and give feedback to help shape what\u2019s next."]}),"\n"]}),"\n",(0,i.jsxs)(r.p,{children:["You can find my Terraform code for deploying Service Groups in Azure ",(0,i.jsx)(r.a,{href:"https://github.com/lukemurraynz/terraform-azapi-servicegroups",children:"lukemurraynz/terraform-azapi-servicegroups"}),"."]}),"\n",(0,i.jsx)(r.p,{children:"Aimed at a draft Platform Engineering team, this example shows how to use Service Groups to create a clear, manageable structure for your Azure resources; the Root Service Group is created by default, however, like Management Groups, you can specify a nested structure In my example, I have:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"Root (Tenant ID)\n\u251c\u2500\u2500 Platform Engineering\n\u2502   \u251c\u2500\u2500 Platform Infrastructure\n\u2502   \u251c\u2500\u2500 Platform DevOps\n\u2502   \u2514\u2500\u2500 Platform Data\n\u251c\u2500\u2500 Application Teams\n\u2502   \u251c\u2500\u2500 Customer Experience\n\u2502   \u2502   \u251c\u2500\u2500 E-commerce Platform\n\u2502   \u2502   \u2514\u2500\u2500 Customer Support\n\u2502   \u2514\u2500\u2500 Internal Operations\n\u2502       \u251c\u2500\u2500 Finance Systems\n\u2502       \u2514\u2500\u2500 Human Resources\n\u2514\u2500\u2500 Security & Compliance\n    \u2514\u2500\u2500 Identity & Access Management\n"})}),"\n",(0,i.jsxs)(r.p,{children:["With Service Group members being created for each of the service groups, in this example, I have created a Storage Account as a member of the Identity and Access Management Service Group and a Resource Group called open as a member of the E-commerce Platform ",(0,i.jsx)(r.em,{children:"(which includes resources inside that group by default)"}),"."]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-hcl",children:'# Azure Service Groups configuration following Platform Engineering best practices\n# This configuration demonstrates a typical enterprise structure with:\n# - Platform Engineering teams managing infrastructure and shared services\n# - Application teams organized by business domains\n# - Clear separation of concerns and hierarchical governance\n\nterraform {\n  required_providers {\n    azapi = {\n      source  = "Azure/azapi"\n      version = "~> 2.4.0"\n    }\n  }\n  required_version = ">= 1.3.0"\n}\n\nprovider "azapi" {}\n\n# Local variables for configuration\nlocals {\n  # Tenant ID - used as the root service group ID (automatically created by Azure)\n  tenant_id = var.tenant_id\n}\n\n# Platform Engineering - Top-level service group for platform teams\nresource "azapi_resource" "platform_engineering" {\n  type      = "Microsoft.Management/serviceGroups@2024-02-01-preview"\n  name      = "platform-engineering"\n  parent_id = "/"\n\n  body = {\n    properties = {\n      displayName = "Platform Engineering"\n      parent = {\n        resourceId = "/providers/Microsoft.Management/serviceGroups/${local.tenant_id}"\n      }\n    }\n  }\n}\n\n# Platform Infrastructure - Core infrastructure services\nresource "azapi_resource" "platform_infrastructure" {\n  type      = "Microsoft.Management/serviceGroups@2024-02-01-preview"\n  name      = "platform-infrastructure"\n  parent_id = "/"\n\n  body = {\n    properties = {\n      displayName = "Platform Infrastructure"\n      parent = {\n        resourceId = azapi_resource.platform_engineering.id\n      }\n    }\n  }\n}\n\n# Platform DevOps - CI/CD, deployment automation, and developer tooling\nresource "azapi_resource" "platform_devops" {\n  type      = "Microsoft.Management/serviceGroups@2024-02-01-preview"\n  name      = "platform-devops"\n  parent_id = "/"\n\n  body = {\n    properties = {\n      displayName = "Platform DevOps"\n      parent = {\n        resourceId = azapi_resource.platform_engineering.id\n      }\n    }\n  }\n}\n\n# Platform Data - Data platform and analytics services\nresource "azapi_resource" "platform_data" {\n  type      = "Microsoft.Management/serviceGroups@2024-02-01-preview"\n  name      = "platform-data"\n  parent_id = "/"\n\n  body = {\n    properties = {\n      displayName = "Platform Data"\n      parent = {\n        resourceId = azapi_resource.platform_engineering.id\n      }\n    }\n  }\n}\n\n# Application Teams - Top-level service group for application teams\nresource "azapi_resource" "application_teams" {\n  type      = "Microsoft.Management/serviceGroups@2024-02-01-preview"\n  name      = "application-teams"\n  parent_id = "/"\n\n  body = {\n    properties = {\n      displayName = "Application Teams"\n      parent = {\n        resourceId = "/providers/Microsoft.Management/serviceGroups/${local.tenant_id}"\n      }\n    }\n  }\n}\n\n# Customer Experience - Customer-facing applications\nresource "azapi_resource" "customer_experience" {\n  type      = "Microsoft.Management/serviceGroups@2024-02-01-preview"\n  name      = "customer-experience"\n  parent_id = "/"\n\n  body = {\n    properties = {\n      displayName = "Customer Experience"\n      parent = {\n        resourceId = azapi_resource.application_teams.id\n      }\n    }\n  }\n}\n\n# E-commerce Platform - E-commerce specific applications\nresource "azapi_resource" "ecommerce_platform" {\n  type      = "Microsoft.Management/serviceGroups@2024-02-01-preview"\n  name      = "ecommerce-platform"\n  parent_id = "/"\n\n  body = {\n    properties = {\n      displayName = "E-commerce Platform"\n      parent = {\n        resourceId = azapi_resource.customer_experience.id\n      }\n    }\n  }\n}\n\n# Customer Support - Customer support applications\nresource "azapi_resource" "customer_support" {\n  type      = "Microsoft.Management/serviceGroups@2024-02-01-preview"\n  name      = "customer-support"\n  parent_id = "/"\n\n  body = {\n    properties = {\n      displayName = "Customer Support"\n      parent = {\n        resourceId = azapi_resource.customer_experience.id\n      }\n    }\n  }\n}\n\n# Internal Operations - Internal business applications\nresource "azapi_resource" "internal_operations" {\n  type      = "Microsoft.Management/serviceGroups@2024-02-01-preview"\n  name      = "internal-operations"\n  parent_id = "/"\n\n  body = {\n    properties = {\n      displayName = "Internal Operations"\n      parent = {\n        resourceId = azapi_resource.application_teams.id\n      }\n    }\n  }\n}\n\n# Finance Systems - Financial applications\nresource "azapi_resource" "finance_systems" {\n  type      = "Microsoft.Management/serviceGroups@2024-02-01-preview"\n  name      = "finance-systems"\n  parent_id = "/"\n\n  body = {\n    properties = {\n      displayName = "Finance Systems"\n      parent = {\n        resourceId = azapi_resource.internal_operations.id\n      }\n    }\n  }\n}\n\n# Human Resources - HR applications\nresource "azapi_resource" "human_resources" {\n  type      = "Microsoft.Management/serviceGroups@2024-02-01-preview"\n  name      = "human-resources"\n  parent_id = "/"\n\n  body = {\n    properties = {\n      displayName = "Human Resources"\n      parent = {\n        resourceId = azapi_resource.internal_operations.id\n      }\n    }\n  }\n}\n\n# Security and Compliance - Cross-cutting security services\nresource "azapi_resource" "security_compliance" {\n  type      = "Microsoft.Management/serviceGroups@2024-02-01-preview"\n  name      = "security-compliance"\n  parent_id = "/"\n\n  body = {\n    properties = {\n      displayName = "Security & Compliance"\n      parent = {\n        resourceId = "/providers/Microsoft.Management/serviceGroups/${local.tenant_id}"\n      }\n    }\n  }\n}\n\n# Identity and Access Management\nresource "azapi_resource" "identity_access" {\n  type      = "Microsoft.Management/serviceGroups@2024-02-01-preview"\n  name      = "identity-access"\n  parent_id = "/"\n\n  body = {\n    properties = {\n      displayName = "Identity & Access Management"\n      parent = {\n        resourceId = azapi_resource.security_compliance.id\n      }\n    }\n  }\n}\n\n# Service Group Member - Storage Account for Security & Compliance\nresource "azapi_resource" "storage_account_member" {\n  type      = "Microsoft.Relationships/serviceGroupMember@2023-09-01-preview"\n  name      = "storage-security-member"\n  parent_id = "/subscriptions/11b74992-d520-46e1-a9e9-b55c57d2e890/resourceGroups/openai/providers/Microsoft.Storage/storageAccounts/stgaccountlk"\n\n  # Disable schema validation for this preview resource\n  schema_validation_enabled = false\n\n  body = {\n    properties = {\n      targetId = azapi_resource.security_compliance.id\n    }\n  }\n\n  depends_on = [\n    azapi_resource.security_compliance\n  ]\n}\n\n# Service Group Member - Resource Group for E-commerce Platform\nresource "azapi_resource" "resourcegroup_ecommerce_member" {\n  type      = "Microsoft.Relationships/serviceGroupMember@2023-09-01-preview"\n  name      = "openai-rg-ecommerce-member"\n  parent_id = "/subscriptions/11b74992-d520-46e1-a9e9-b55c57d2e890/resourceGroups/openai"\n\n  # Disable schema validation for this preview resource\n  schema_validation_enabled = false\n\n  body = {\n    properties = {\n      targetId = azapi_resource.ecommerce_platform.id\n    }\n  }\n\n  depends_on = [\n    azapi_resource.ecommerce_platform\n  ]\n}\n'})}),"\n",(0,i.jsxs)(r.p,{children:["This code creates a structured hierarchy of service groups, each representing a logical grouping of resources based on their function or ownership. The ",(0,i.jsx)(r.code,{children:"azapi_resource"})," blocks define the service groups, while the ",(0,i.jsx)(r.code,{children:"azapi_resource"})," blocks with type ",(0,i.jsx)(r.code,{children:"Microsoft.Relationships/serviceGroupMember"})," establish relationships between specific Azure resources and the service groups."]}),"\n",(0,i.jsx)(r.h2,{id:"-additional-resources",children:"\ud83d\udcda Additional Resources"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:(0,i.jsx)(r.a,{href:"https://learn.microsoft.com/azure/governance/service-groups/?WT.mc_id=AZ-MVP-5004796",children:"Azure Service Groups Documentation"})}),"\n",(0,i.jsx)(r.li,{children:(0,i.jsx)(r.a,{href:"https://learn.microsoft.com/platform-engineering/?WT.mc_id=AZ-MVP-5004796",children:"Platform Engineering Best Practices"})}),"\n",(0,i.jsx)(r.li,{children:(0,i.jsx)(r.a,{href:"https://teamtopologies.com/",children:"Team Topologies"})}),"\n",(0,i.jsx)(r.li,{children:(0,i.jsx)(r.a,{href:"https://learn.microsoft.com/azure/well-architected/?WT.mc_id=AZ-MVP-5004796",children:"Azure Well-Architected Framework"})}),"\n"]})]})}function l(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},15394:(e,r,n)=>{n.d(r,{A:()=>o});const o=n.p+"assets/images/ServiceGroupsOverview-05404e13ffd015c83f0bbfc3ea152092.jpg"},28453:(e,r,n)=>{n.d(r,{R:()=>s,x:()=>t});var o=n(96540);const i={},a=o.createContext(i);function s(e){const r=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function t(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),o.createElement(a.Provider,{value:r},e.children)}},77312:e=>{e.exports=JSON.parse('{"permalink":"/azure/service-groups-terraform-azapi","source":"@site/blog/2025-07-06-servicegroupsazapi/index.mdx","title":"Deploying Azure Service Groups with Terraform AzAPI","description":"Deploy Azure Service Groups with Terraform AzAPI to group resources across subscriptions for improved cloud governance.","date":"2025-07-06T05:45:39.743Z","tags":[{"inline":true,"label":"Azure","permalink":"/tags/azure"}],"readingTime":5.82,"hasTruncateMarker":true,"authors":[{"name":"Luke Murray","title":"Author","url":"https://luke.geek.nz","imageURL":"https://luke.geek.nz/img/logo.png","key":"Luke","page":null}],"frontMatter":{"title":"Deploying Azure Service Groups with Terraform AzAPI","metaDescription":"Deploy Azure Service Groups with Terraform AzAPI to group resources across subscriptions for improved cloud governance.","tags":["Azure"],"categories":["Azure"],"authors":["Luke"],"slug":"azure/service-groups-terraform-azapi","keywords":["Azure","Service Groups","Terraform","AzAPI","Cloud Governance","Platform Engineering","Resource Management"],"description":"Deploy Azure Service Groups with Terraform AzAPI to group resources across subscriptions for improved cloud governance.","date":"2025-07-06T05:45:39.743Z"},"unlisted":false,"nextItem":{"title":"Model Context Protocol (MCP) in VS Code with Microsoft Learn","permalink":"/azure/mcp-vscode-microsoft-learn"}}')}}]);