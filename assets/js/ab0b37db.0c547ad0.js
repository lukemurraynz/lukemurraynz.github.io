"use strict";(self.webpackChunklukemurraynz=self.webpackChunklukemurraynz||[]).push([[45251],{72577:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var s=n(85893),o=n(11151);const a={title:"Add existing Azure resource to a Deployment Stack",metaDescription:"This guide shows you how to add existing Azure resources to a Deployment Stack using Bicep.",date:new Date("2024-01-09T06:05:43.214Z"),tags:["Azure"],categories:["Azure"],authors:["Luke"],header:{teaser:"BlogHeading_DeploymentStackMissingResource.gif"},slug:"azure/existing-resource-deploymentstack",keywords:["azure","bicep","deployment","deploymentstack"],description:"Add existing Azure resources to a Deployment Stack using Bicep."},r=void 0,i={permalink:"/azure/existing-resource-deploymentstack",source:"@site/blog/2024-01-09-add-existingresource-deploymentstack/index.mdx",title:"Add existing Azure resource to a Deployment Stack",description:"Add existing Azure resources to a Deployment Stack using Bicep.",date:"2024-01-09T06:05:43.214Z",formattedDate:"January 9, 2024",tags:[{label:"Azure",permalink:"/tags/azure"}],readingTime:3.56,hasTruncateMarker:!0,authors:[{name:"Luke Murray",title:"Author",url:"https://luke.geek.nz",imageURL:"https://luke.geek.nz/img/logo.png",key:"Luke"}],frontMatter:{title:"Add existing Azure resource to a Deployment Stack",metaDescription:"This guide shows you how to add existing Azure resources to a Deployment Stack using Bicep.",date:"2024-01-09T06:05:43.214Z",tags:["Azure"],categories:["Azure"],authors:["Luke"],header:{teaser:"BlogHeading_DeploymentStackMissingResource.gif"},slug:"azure/existing-resource-deploymentstack",keywords:["azure","bicep","deployment","deploymentstack"],description:"Add existing Azure resources to a Deployment Stack using Bicep."},unlisted:!1,nextItem:{title:"The specified service namespace is invalid EventHub",permalink:"/azure/service-namespace-invalid-eventhub"}},c={authorsImageUrls:[void 0]},l=[];function u(e){const t={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",img:"img",p:"p",pre:"pre",strong:"strong",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:["An Azure ",(0,s.jsx)(t.a,{href:"https://learn.microsoft.com/azure/azure-resource-manager/bicep/deployment-stacks?tabs=azure-powershell&WT.mc_id=AZ-MVP-5004796",children:"deployment stack"})," is a type of Azure resource that enables the management of a group of Azure resources as an atomic unit."]}),"\n",(0,s.jsx)(t.p,{children:"If you deploy a new Deployment Stack, all resources in your ARM/Bicep template will get included as Managed resources, but what if you want to include a resource that was deployed outside of Bicep into your Deployment Stack?"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"Blog Heading ",src:n(33946).Z+"",width:"1200",height:"628"})}),"\n",(0,s.jsx)(t.p,{children:"A community member, approached me to ask how they could do this, so let us take a look."}),"\n","\n",(0,s.jsx)(t.admonition,{type:"info",children:(0,s.jsx)(t.p,{children:"An Azure deployment stack is a type of Azure resource that enables the management of a group of Azure resources as an atomic unit. When a Bicep file or an ARM JSON template is submitted to a deployment stack, it defines the resources that are managed by the stack. If a resource that was previously included in the template is removed, it will either be detached or deleted based on the specified actionOnUnmanage behavior of the deployment stack. Similar to other Azure resources, access to the deployment stack can be restricted using Azure role-based access control (Azure RBAC). To create and update a deployment stack, you can utilize Azure CLI, Azure PowerShell, or the Azure portal along with Bicep files. These Bicep files are transpiled into ARM JSON templates, which are then deployed as a deployment object by the stack."})}),"\n",(0,s.jsx)(t.admonition,{type:"tip",children:(0,s.jsxs)(t.p,{children:["Check out a previous post I did on ",(0,s.jsx)(t.a,{href:"https://luke.geek.nz/azure/Azure-Bicep-Deployment-with-Deployment-Stacks/",children:"Deployment Stacks"})," for a bit more detail on how they can be used and setup."]})}),"\n",(0,s.jsxs)(t.p,{children:["In our demo, we will have a Resource Group, with an existing Storage account already precreated ",(0,s.jsx)(t.em,{children:"(using the Azure Portal)"})," and a Deployment Stack, consisting of an Azure KeyVault deployed using Bicep."]}),"\n",(0,s.jsx)(t.p,{children:"The PowerShell command used to deploy the Bicep is:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-powershell",children:'New-AzResourceGroupDeploymentStack `\n  -Name "MyDeploymentStack" `\n  -ResourceGroupName "deploymentstacks-rg" `\n  -TemplateFile "main.bicep" `\n  -DenySettingsMode "none"\n'})}),"\n",(0,s.jsxs)(t.p,{children:["And the Bicep we initially deployed ",(0,s.jsx)(t.em,{children:"(where the Storage account isn't part of the Deployment Stack, and the KeyVault is a dummy resource for something to deploy)"})," is:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bicep",children:"\nresource storage 'Microsoft.Storage/storageAccounts@2023-01-01' existing = {\n  name: 'stfacc1337'\n}\n\nresource keyvault 'Microsoft.KeyVault/vaults@2023-07-01' = {\n  name: 'keyvaulstest13345'\n  location:  resourceGroup().location\n  \n  properties: {\n    accessPolicies: [\n      {\n        tenantId: subscription().tenantId\n        objectId: '00000000-0000-0000-0000-000000000000'\n        permissions: {\n          keys: ['all']\n          secrets: ['all']\n          certificates: ['all']\n        }\n      }\n    ]\n    \n    sku: {\n      family:   'A'\n      name:  'standard'\n    }\ntenantId: subscription().tenantId\n  }\n}\n\n"})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"Deployment Stack - Missing Storage account",src:n(93370).Z+"",width:"1886",height:"684"})}),"\n",(0,s.jsxs)(t.p,{children:["As you can see, even though the 'stfacc1337' storage account is tested as a referenable object in Bicep by using the ",(0,s.jsx)(t.a,{href:"https://learn.microsoft.com/azure/azure-resource-manager/bicep/existing-resource?WT.mc_id=AZ-MVP-5004796",children:"existing"})," flag, it hasn't been brought into the Deployment Stack."]}),"\n",(0,s.jsxs)(t.p,{children:["Being able to reference the module in Bicep, isn't enough to bring it into the Deployment Stack and this is by design ",(0,s.jsxs)(t.em,{children:["(",(0,s.jsx)(t.a,{href:"https://github.com/Azure/deployment-stacks/issues/146",children:"Issue #146"}),")"]}),"."]}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsx)(t.p,{children:"So if you can't reference an existing resource, how can you bring it into the deployment stack?"}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"The Answer is: You need to import it into the Bicep!"})}),"\n",(0,s.jsx)(t.p,{children:"A resource needs to exist in Infrastructure as Code, in order to be added to a Deployment Stack, the easiest way is to import it."}),"\n",(0,s.jsxs)(t.p,{children:["I did a seperate ",(0,s.jsx)(t.a,{href:"https://luke.geek.nz/azure/azure-bicep-and-insert-resource/",children:"blog article"})," on using the Bicep Visual Studio extension, to import an existing resource, so refer to that, but in essence it can import the resource from ARM, and compile it into an indentical resource into Bicep, matching what you have deployed."]}),"\n",(0,s.jsx)(t.p,{children:"The Bicep now looks like this:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bicep",children:"@description('Generated from /subscriptions/a42e282a-c1e4-4abc-9fa1-1dd1ecbd6bf9/resourceGroups/deploymentstacks-rg/providers/Microsoft.Storage/storageAccounts/stfacc1337')\nresource stfacc 'Microsoft.Storage/storageAccounts@2023-01-01' = {\n  sku: {\n    name: 'Standard_RAGRS'\n  }\n  kind: 'StorageV2'\n  name: 'stfacc1337'\n  location: 'australiaeast'\n  tags: {}\n  properties: {\n    dnsEndpointType: 'Standard'\n    defaultToOAuthAuthentication: false\n    publicNetworkAccess: 'Enabled'\n    allowCrossTenantReplication: false\n    minimumTlsVersion: 'TLS1_2'\n    allowBlobPublicAccess: false\n    allowSharedKeyAccess: true\n    networkAcls: {\n      ipv6Rules: []\n      bypass: 'AzureServices'\n      virtualNetworkRules: []\n      ipRules: []\n      defaultAction: 'Allow'\n    }\n    supportsHttpsTrafficOnly: true\n    encryption: {\n      requireInfrastructureEncryption: false\n      services: {\n        file: {\n          keyType: 'Account'\n          enabled: true\n        }\n        blob: {\n          keyType: 'Account'\n          enabled: true\n        }\n      }\n      keySource: 'Microsoft.Storage'\n    }\n    accessTier: 'Hot'\n  }\n}\n\nresource keyvault 'Microsoft.KeyVault/vaults@2023-07-01' = {\n  name: 'keyvaulstest13345'\n  location:  resourceGroup().location\n  \n  properties: {\n    accessPolicies: [\n      {\n        tenantId: subscription().tenantId\n        objectId: '00000000-0000-0000-0000-000000000000'\n        permissions: {\n          keys: ['all']\n          secrets: ['all']\n          certificates: ['all']\n        }\n      }\n    ]\n    \n    sku: {\n      family:   'A'\n      name:  'standard'\n    }\ntenantId: subscription().tenantId\n  }\n}\n\n"})}),"\n",(0,s.jsx)(t.p,{children:"Now redeploy the Deployment Stack."}),"\n",(0,s.jsx)(t.admonition,{type:"tip",children:(0,s.jsx)(t.p,{children:"The create-stack commands can also be used to update deployment stacks!"})}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsx)(t.p,{children:"Once your Deployment Stack has been deployed, your resource is now imported."}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"Deployment Stacks - Including Storage account",src:n(19198).Z+"",width:"1904",height:"691"})})]})}function d(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},33946:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/BlogHeading_DeploymentStackMissingResource-392444bd56f4fa1fc9df54f4b2ad10fb.gif"},19198:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/DeploymentStack_IncludingStgAccount-970c80f71959bcfe9eaf91669fcedf88.png"},93370:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/DeploymentStack_LackingStgAccount-7c4805869587d85f1bbce1218c144e86.png"},11151:(e,t,n)=>{n.d(t,{Z:()=>i,a:()=>r});var s=n(67294);const o={},a=s.createContext(o);function r(e){const t=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(a.Provider,{value:t},e.children)}}}]);