"use strict";(self.webpackChunklukemurraynz=self.webpackChunklukemurraynz||[]).push([[4933],{71618:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>l,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var a=r(74848),n=r(28453);const s={title:"Federated Credentials to AKS Managed Identity",metaDescription:"Learn how to add federated credentials to a user-assigned managed identity in Azure Kubernetes Service (AKS) to access protected resources.",Description:"Explore configuring federated credentials for a user-assigned managed identity in AKS, enabling secure access to Microsoft Entra-protected resources such as Azure Key Vault and Microsoft Graph.",date:new Date("2024-05-05T08:39:07.238Z"),tags:["Azure"],categories:["Azure"],authors:["Luke"],header:"aks-workload-identity-model.png",slug:"azure/federated-credentials-aks",keywords:["azure","portal","Adding Federated Credentials to AKS Managed Identity","AKS","Azure Kubernetes Service","federated credentials","user-assigned managed identity","Microsoft Entra","Azure Key Vault","Microsoft Graph"]},i=void 0,o={permalink:"/azure/federated-credentials-aks",source:"@site/blog/2024-05-05-aks-federatedidentity/index.mdx",title:"Federated Credentials to AKS Managed Identity",description:"Workloads deployed on an Azure Kubernetes Services (AKS) cluster require Microsoft Entra application credentials or managed identities to access Microsoft Entra-protected resources, such as Azure Key Vault and Microsoft Graph. Microsoft Entra Workload ID integrates with the capabilities native to Kubernetes to federate with external identity providers.",date:"2024-05-05T08:39:07.238Z",tags:[{label:"Azure",permalink:"/tags/azure"}],readingTime:5.295,hasTruncateMarker:!0,authors:[{name:"Luke Murray",title:"Author",url:"https://luke.geek.nz",imageURL:"https://luke.geek.nz/img/logo.png",key:"Luke"}],frontMatter:{title:"Federated Credentials to AKS Managed Identity",metaDescription:"Learn how to add federated credentials to a user-assigned managed identity in Azure Kubernetes Service (AKS) to access protected resources.",Description:"Explore configuring federated credentials for a user-assigned managed identity in AKS, enabling secure access to Microsoft Entra-protected resources such as Azure Key Vault and Microsoft Graph.",date:"2024-05-05T08:39:07.238Z",tags:["Azure"],categories:["Azure"],authors:["Luke"],header:"aks-workload-identity-model.png",slug:"azure/federated-credentials-aks",keywords:["azure","portal","Adding Federated Credentials to AKS Managed Identity","AKS","Azure Kubernetes Service","federated credentials","user-assigned managed identity","Microsoft Entra","Azure Key Vault","Microsoft Graph"]},unlisted:!1,prevItem:{title:"Authorization Permission Mismatch error with Azure Storage",permalink:"/azure/authorization-permission-mismatch-error-azure-storage"},nextItem:{title:"Uncollapsing the Azure Portal Blade Menu",permalink:"/azure/uncollapsing-azure-portal-blade-menu"}},d={authorsImageUrls:[void 0]},c=[];function u(e){const t={img:"img",p:"p",...(0,n.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.p,{children:"Workloads deployed on an Azure Kubernetes Services (AKS) cluster require Microsoft Entra application credentials or managed identities to access Microsoft Entra-protected resources, such as Azure Key Vault and Microsoft Graph. Microsoft Entra Workload ID integrates with the capabilities native to Kubernetes to federate with external identity providers."}),"\n",(0,a.jsx)(t.p,{children:"Let's look at how that might be set up for Managed Identity for AKS (Azure Kubernetes Service) in Azure."}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{alt:"AKS Workload Identity",src:r(34187).A+"",width:"1070",height:"614"})})]})}function l(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}},34187:(e,t,r)=>{r.d(t,{A:()=>a});const a=r.p+"assets/images/aks-workload-identity-model-e921e08544288984f5cc6c418a26f595.png"},28453:(e,t,r)=>{r.d(t,{R:()=>i,x:()=>o});var a=r(96540);const n={},s=a.createContext(n);function i(e){const t=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),a.createElement(s.Provider,{value:t},e.children)}}}]);