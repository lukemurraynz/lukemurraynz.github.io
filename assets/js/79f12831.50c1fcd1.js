"use strict";(self.webpackChunklukemurraynz=self.webpackChunklukemurraynz||[]).push([[10662],{65291:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>a,toc:()=>l});var n=t(85893),s=t(11151);const i={date:"2023-01-02 00:00:00 +1300",title:"Create Azure IP Groups based on the IP address ranges of countries",authors:["Luke"],tags:["Azure"],toc:!1,header:{teaser:"/uploads/azureipgroupblog.png"}},o=void 0,a={permalink:"/2023/01/02/create-azure-ip-groups-based-on-the-ip-address-ranges-of-countries",source:"@site/blog/2023-01-02-create-azure-ip-groups-based-on-the-ip-address-ranges-of-countries.md",title:"Create Azure IP Groups based on the IP address ranges of countries",description:"An IP Group in Microsoft Azure is a logical container of IP address ranges for private and public addresses.",date:"2023-01-02T00:00:00.000Z",formattedDate:"January 2, 2023",tags:[{label:"Azure",permalink:"/tags/azure"}],readingTime:5.435,hasTruncateMarker:!1,authors:[{name:"Luke Murray",title:"Author",url:"https://luke.geek.nz",imageURL:"../img/logo.png",key:"Luke"}],frontMatter:{date:"2023-01-02 00:00:00 +1300",title:"Create Azure IP Groups based on the IP address ranges of countries",authors:["Luke"],tags:["Azure"],toc:!1,header:{teaser:"/uploads/azureipgroupblog.png"}},unlisted:!1,prevItem:{title:"Export icons to SVG from the Microsoft Azure Portal using Amazing Icon Downloader",permalink:"/2023/01/09/export-icons-to-svg-from-the-microsoft-azure-portal-using-amazing-icon-downloader"},nextItem:{title:"Microsoft Dev Box wrapped in a bow",permalink:"/2022/12/11/microsoft-devbox-wrapped-in-a-bow"}},d={authorsImageUrls:[void 0]},l=[];function c(e){const r={a:"a",blockquote:"blockquote",code:"code",em:"em",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(r.p,{children:["An ",(0,n.jsx)(r.a,{href:"https://learn.microsoft.com/azure/firewall/ip-groups?WT.mc_id=AZ-MVP-5004796",title:"IP Groups in Azure Firewall",children:"IP Group"})," in Microsoft Azure is a logical container of IP address ranges for private and public addresses."]}),"\n",(0,n.jsxs)(r.blockquote,{children:["\n",(0,n.jsx)(r.p,{children:"IP Groups allow you to group and manage IP addresses for Azure Firewall rules in the following ways:"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:"As a source address in DNAT rules"}),"\n",(0,n.jsx)(r.li,{children:"As a source or destination address in network rules"}),"\n",(0,n.jsx)(r.li,{children:"As a source address in application rules"}),"\n"]}),"\n",(0,n.jsx)(r.p,{children:"An IP Group can have a single IP address, multiple IP addresses, one or more IP address ranges or addresses and ranges in combination."}),"\n"]}),"\n",(0,n.jsx)(r.p,{children:"The IP Group allows you to define an IP address that can be used in conjunction with Azure Firewall, to allow or deny internal or external traffic from a perspective set of IP addresses."}),"\n",(0,n.jsxs)(r.blockquote,{children:["\n",(0,n.jsx)(r.p,{children:"The following IPv4 address format examples are valid to use in IP Groups:"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:"Single address: 10.0.0.0"}),"\n",(0,n.jsx)(r.li,{children:"CIDR notation: 10.1.0.0/32"}),"\n",(0,n.jsx)(r.li,{children:"Address range: 10.2.0.0-10.2.0.31"}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(r.p,{children:["By default, the Azure Firewall blocks outbound and inbound traffic; however, you may want to enable ",(0,n.jsx)(r.em,{children:"(or block)"})," traffic to and from specific countries - there is no built-in geo-filtering with Azure Firewall, as you can use other services, such as the Web Application Gateway and with the ",(0,n.jsx)(r.a,{href:"https://learn.microsoft.com/azure/application-gateway/overview?WT.mc_id=AZ-MVP-5004796",title:"What is Azure Application Gateway?",children:"Application Gateway"})," and ",(0,n.jsx)(r.a,{href:"https://learn.microsoft.com/azure/web-application-firewall/afds/waf-front-door-geo-filtering?WT.mc_id=AZ-MVP-5004796",title:"What is geo-filtering on a domain for Azure Front Door Service?",children:"Azure Front Door"})," to block and allow access, and other third party services such as Cloudflare. This script can be adapted for any list of IP ranges; it doesn't need to be country IP addresses."]}),"\n",(0,n.jsxs)(r.p,{children:["However, you may want to control access to and from specific countries ",(0,n.jsx)(r.em,{children:"(or other services)"})," with Azure Firewall - this is where the IP Groups can be effective, and because we won't be editing the Firewall directly - we won't run into issues with delays without having to wait for the Azure Firewall policies to be updated."]}),"\n",(0,n.jsxs)(r.p,{children:["To solve the issue of creating the IP groups and finding and keeping the IP groups up-to-date with various countries' IP ranges - I have created a PowerShell function to retrieve supported ",(0,n.jsx)(r.a,{href:"https://www.ipdeny.com/ipblocks/data/aggregated/",title:"IP Deny aggregated list",children:"countries"}),"' IP CIDR ranges and create the relevant IP groups."]}),"\n",(0,n.jsx)(r.p,{children:(0,n.jsx)(r.img,{alt:"Azure IP Group - Country IP ranges",src:t(29826).Z+"",title:"Azure IP Group - Country IP ranges",width:"4000",height:"2250"})}),"\n",(0,n.jsx)(r.p,{children:"With IP Groups, there are a few things to keep in mind:"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:["You can have 200 IP Groups per firewall with a maximum of ",(0,n.jsx)(r.strong,{children:"5000 individual IP addresses or prefixes per each IP Group"}),"."]}),"\n"]}),"\n",(0,n.jsx)(r.p,{children:"For a country like New Zealand, the 5000 limit for the address ranges is acceptable - but for other countries, like the United States or United Kingdom, this can be an issue, where the total IP ranges can grow to over 20k - to deal with this, the script will create multiple IP Groups, and append a number to the end."}),"\n",(0,n.jsxs)(r.p,{children:["Suppose IPs are manually added to the groups. In that case, they won't be added - the script will add in any different or new IP ranges, ignoring any current IP ranges (",(0,n.jsx)(r.em,{children:"this means it won't delete any IP ranges that are removed from the source IP list from IPDeny)"}),"; however, I recommend that anything added outside of this script is kept in a separate IP group."]}),"\n",(0,n.jsx)(r.p,{children:(0,n.jsx)(r.em,{children:"As with any script, I recommend this is tested in a test environment first."})}),"\n",(0,n.jsx)(r.p,{children:"Before we run it, we need a few prerequisites."}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:["At least ",(0,n.jsx)(r.a,{href:"https://learn.microsoft.com/powershell/scripting/install/installing-powershell?view=powershell-7.3&WT.mc_id=AZ-MVP-5004796",title:"Install PowerShell on Windows, Linux, and macOS",children:"PowerShell 3.0+"})]}),"\n",(0,n.jsxs)(r.li,{children:["Azure ",(0,n.jsx)(r.a,{href:"https://learn.microsoft.com/powershell/azure/new-azureps-module-az?view=azps-9.2.0&WT.mc_id=AZ-MVP-5004796",title:"Introducing the Azure Az PowerShell module",children:"Az PowerShell Modules"}),(0,n.jsx)(r.em,{children:"(specifically Az.Network, Az.Resources)"})]}),"\n"]}),"\n",(0,n.jsxs)(r.p,{children:["The function assumes you have ",(0,n.jsx)(r.a,{href:"https://luke.geek.nz/azure/powershell/Using-PowerShell-to-connect-to-Azure/",title:"Using PowerShell to connect to Microsoft Azure",children:"connected to Microsoft Azure and your relevant subscription"}),"."]}),"\n",(0,n.jsxs)(r.p,{children:["Before we import the function, I am going to check if any IP groups already exist quickly ",(0,n.jsx)(r.em,{children:"(this isn't required) -"})," but it's a good opportunity to check that you are connected to your Azure subscription and that the AzIPGroup cmdlets exist -  and whether you have any IP groups already existing."]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{children:"Get-AzIpGroup\n"})}),"\n",(0,n.jsx)(r.p,{children:(0,n.jsx)(r.img,{alt:"Get-AzIpGroup",src:t(68642).Z+"",title:"Get-AzIpGroup",width:"996",height:"466"})}),"\n",(0,n.jsx)(r.p,{children:"I have received no errors or existing IP groups in my subscription, so I will continue importing my function."}),"\n",(0,n.jsx)(r.p,{children:"The function can be found here:"}),"\n",(0,n.jsx)(r.p,{children:"{% gist bb06967564affc81f49c5002c335240c %}"}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"Note: Make sure your country matches the supported country shortcodes found here:"})," ",(0,n.jsx)(r.a,{href:"https://www.ipdeny.com/ipblocks/data/aggregated/",title:"Index of /ipblocks/data/aggregated/",children:(0,n.jsx)(r.strong,{children:"IPBlock Aggregated"})}),(0,n.jsx)(r.strong,{children:". IPDeny is the source for the IP address list."})]}),"\n",(0,n.jsxs)(r.p,{children:["Once saved to your computer, it's time to import it into your active PowerShell terminal and run it ",(0,n.jsx)(r.em,{children:"(after you have verified you have connected to the correct Azure subscription)"}),"."]}),"\n",(0,n.jsx)(r.p,{children:"So I will navigate to the script and import it:"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{children:"cd D:\\git\n. .\\New-AzCountryIPGroup.ps1\nNew-AzCountryIPGroup\n"})}),"\n",(0,n.jsx)(r.p,{children:(0,n.jsx)(r.img,{alt:"Import New-AzCountryIPGroup.ps1",src:t(77497).Z+"",title:"Import New-AzCountryIPGroup.ps1",width:"996",height:"466"})}),"\n",(0,n.jsx)(r.p,{children:"The 'New-AzCountryIPGroup' Azure function relies on 4 parameters:"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Parameters"}),(0,n.jsx)(r.th,{children:"Values"})]})}),(0,n.jsxs)(r.tbody,{children:[(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"CountryCode"}),(0,n.jsx)(r.td,{children:"NZ"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"IPGroupName"}),(0,n.jsx)(r.td,{children:"IPGrpNZ"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"IPGroupRGName"}),(0,n.jsx)(r.td,{children:"NetworkRG"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"IPGroupLocation"}),(0,n.jsx)(r.td,{children:"AustraliaEast"})]})]})]}),"\n",(0,n.jsx)(r.p,{children:"Make sure that the values change to your environment; in my example, I am specifying an IP Group and Resource Group that doesn't exist so that the script will create it for me - and the location I will be deploying to will be the Australia East region."}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{children:"New-AzCountryIPGroup -CountryCode NZ -IPGroupName IPGrpNZ -IPGroupRGName NetworkRG -IPGroupLocation AustraliaEast\n"})}),"\n",(0,n.jsx)(r.p,{children:(0,n.jsx)(r.img,{alt:"New-AzCountryIPGroup",src:t(73917).Z+"",title:"New-AzCountryIPGroup",width:"996",height:"466"})}),"\n",(0,n.jsx)(r.p,{children:"As you can see, the script created an Azure Resource Group and imported the New Zealand IP ranges to a new IP Group..."}),"\n",(0,n.jsx)(r.p,{children:"Not required - but if I rerun it, it will simply override any IP addresses that are the same and add any new addresses to the same IP Group that already exists, as below:"}),"\n",(0,n.jsx)(r.p,{children:(0,n.jsx)(r.img,{alt:"Rerun New-AzCountryIPGroup",src:t(92672).Z+"",title:"Rerun New-AzCountryIPGroup",width:"996",height:"466"})}),"\n",(0,n.jsx)(r.p,{children:"The Azure IP Group is visible in the Azure Portal as below:"}),"\n",(0,n.jsx)(r.p,{children:(0,n.jsx)(r.img,{alt:"Azure Portal - Azure IP Group ",src:t(8501).Z+"",title:"Azure Portal - Azure IP Group ",width:"1660",height:"766"})}),"\n",(0,n.jsx)(r.p,{children:"And a Tag was added to include the country:"}),"\n",(0,n.jsx)(r.p,{children:(0,n.jsx)(r.img,{alt:"Azure IP Group - Tag",src:t(48599).Z+"",title:"Azure IP Group - Tag",width:"1682",height:"310"})}),"\n",(0,n.jsx)(r.p,{children:"As New Zealand was under the 5000 limit, only one IP Group was needed, but if we change the Country Code to the US..."}),"\n",(0,n.jsx)(r.p,{children:(0,n.jsx)(r.img,{alt:"Run New-AzCountryIPGroup - US",src:t(33516).Z+"",title:"Run New-AzCountryIPGroup - US",width:"996",height:"469"})}),"\n",(0,n.jsx)(r.p,{children:"It created 5 IP groups, each containing 5000 CIDR IP ranges, with the last containing the remaining IP address ranges."}),"\n",(0,n.jsx)(r.p,{children:"As you can see, it's reasonably easy to create IP Groups containing a list of IP ranges for multiple countries quickly:"}),"\n",(0,n.jsx)(r.p,{children:(0,n.jsx)(r.img,{alt:"Azure Portal - Azure IP Groups",src:t(15327).Z+"",title:"Azure Portal - Azure IP Groups",width:"1070",height:"434"})}),"\n",(0,n.jsxs)(r.p,{children:["Note: The script can also be found in my Public Git Repo ",(0,n.jsx)(r.a,{href:"https://github.com/lukemurraynz/Azure",children:"here"}),", feel free to recommend pull requests if you have anything to add or change."]})]})}function u(e={}){const{wrapper:r}={...(0,s.a)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},29826:(e,r,t)=>{t.d(r,{Z:()=>n});const n=t.p+"assets/images/azureipgroupscript-721e9086bd746513f1e421a89e749679.png"},8501:(e,r,t)=>{t.d(r,{Z:()=>n});const n=t.p+"assets/images/azureportal_ipgrpnz-077757e739b3adc55761e2d499b3defb.png"},48599:(e,r,t)=>{t.d(r,{Z:()=>n});const n=t.p+"assets/images/azureportal_ipgrpnztag-9c6ec05a965b9d151fdad26326748305.png"},15327:(e,r,t)=>{t.d(r,{Z:()=>n});const n=t.p+"assets/images/azureportal_ipgrps-e3190807a83060430e7663c1536f7b9d.png"},68642:(e,r,t)=>{t.d(r,{Z:()=>n});const n=t.p+"assets/images/checkexistingipgroups_empty-e5de11bd4a5063cc4f5e4819d81e9a74.gif"},77497:(e,r,t)=>{t.d(r,{Z:()=>n});const n=t.p+"assets/images/import_countryipgrpfunction-696bc2348102c3247c9d087e27e45ba0.gif"},92672:(e,r,t)=>{t.d(r,{Z:()=>n});const n=t.p+"assets/images/rerun_countryipgrpfunctionnz-1c5f53e13bef98c2865c57107f76918e.gif"},73917:(e,r,t)=>{t.d(r,{Z:()=>n});const n=t.p+"assets/images/run_countryipgrpfunctionnz-09be99efe4949ca31baac8d37dac4d6f.gif"},33516:(e,r,t)=>{t.d(r,{Z:()=>n});const n=t.p+"assets/images/run_countryipgrpfunctionus-5ea57e5b4664923ffabc2c62e26058eb.gif"},11151:(e,r,t)=>{t.d(r,{Z:()=>a,a:()=>o});var n=t(67294);const s={},i=n.createContext(s);function o(e){const r=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),n.createElement(i.Provider,{value:r},e.children)}}}]);