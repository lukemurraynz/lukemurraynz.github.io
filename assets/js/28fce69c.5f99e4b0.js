"use strict";(self.webpackChunklukemurraynz=self.webpackChunklukemurraynz||[]).push([[24013],{89589:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>l});var r=t(18390),i=t(74848),s=t(28453);const o={title:"Implement WebJEA for self-service Start/Stop of Azure Virtual Machines",authors:["Luke"],tags:["Azure"],date:"2021-07-18 00:00:00 +1300",toc:!0,header:{teaser:"/uploads/webjea_startstopazvm.png"}},a=void 0,c={authorsImageUrls:[void 0]},l=[{value:"Prerequisites",id:"prerequisites",level:3},{value:"Setup WebJEA",id:"setup-webjea",level:3},{value:"Setup Self-Signed Certificate",id:"setup-self-signed-certificate",level:4},{value:"Setup a Group Managed Service Account",id:"setup-a-group-managed-service-account",level:4},{value:"Install WebJEA",id:"install-webjea",level:4},{value:"Configure WebJEA",id:"configure-webjea",level:3},{value:"Setup Azure Virtual Machine Start/Stop",id:"setup-azure-virtual-machine-startstop",level:3},{value:"Create Service Principal",id:"create-service-principal",level:4},{value:"Create Get-VM script",id:"create-get-vm-script",level:4},{value:"Create Set-VM script",id:"create-set-vm-script",level:4},{value:"Set VM in WebJEA Config",id:"set-vm-in-webjea-config",level:4},{value:"Test Azure Virtual Machine Start/Stop",id:"test-azure-virtual-machine-startstop",level:3},{value:"Additional Notes",id:"additional-notes",level:3}];function d(e){const n={a:"a",code:"code",em:"em",h3:"h3",h4:"h4",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["WebJEA allows you to build web forms for any PowerShell script dynamically. WebJEA automatically ",(0,i.jsx)(n.strong,{children:"parses the script at page load for description, parameters and validation"}),", ",(0,i.jsx)(n.strong,{children:"then dynamically builds a form to take input and display formatted output!"})]}),"\n",(0,i.jsx)(n.p,{children:"The main goals for WebJEA:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Reduce delegation of privileged access to users"}),"\n",(0,i.jsx)(n.li,{children:"Quickly automate on-demand tasks and grant access to less-privileged users"}),"\n",(0,i.jsx)(n.li,{children:"Leverage your existing knowledge in PowerShell to build web forms and automate on-demand processes"}),"\n",(0,i.jsx)(n.li,{children:"Encourage proper script creation by parsing and honouring advanced function parameters and comments"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Because WebJEA is simply a Self-Service Portal for PowerShell scripts, anything you can script with PowerShell you can run through the Portal! Opening a lot of opportunities for automation without having to learn third party automation toolsets! Anyone who knows PowerShell can use it! Each script can be locked down to specific users and AD groups!"}),"\n",(0,i.jsxs)(n.p,{children:["You can read more about WebJEA directly on the GitHub page: ",(0,i.jsx)(n.a,{href:"https://github.com/markdomansky/WebJEA",title:"https://github.com/markdomansky/WebJEA",children:"https://github.com/markdomansky/WebJEA"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"This guide will concentrate on setting up WebJEA for self-service Azure VM management. However, WebJEA can be used to enable much more than what this blog article covers, from things such as new user onboarding, to resource creation."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"WebJEA - Start/Stop",src:t(89979).A+"",width:"1631",height:"1072"})}),"\n",(0,i.jsx)(n.p,{children:"We will use a Windows Server 2019, running in Microsoft Azure, to run WebJEA from."}),"\n",(0,i.jsx)(n.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Domain Joined server running Windows 2016+ Core/Full with PowerShell 5.1"}),"\n",(0,i.jsx)(n.li,{children:"The server must have permission to go out over the internet to Azure and download PowerShell modules."}),"\n",(0,i.jsxs)(n.li,{children:["CPU/RAM Requirements will depend significantly on your usage, start low ",(0,i.jsx)(n.em,{children:"(2-vCPU/4GB RAM)"})," and grow as needed."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["I've created a Standard_B2ms ",(0,i.jsx)(n.em,{children:"(2vCPU, 8GB RAM)"})," virtual machine, called: WEBJEA-P01 in an Azure Resource Group called: webjea_prod"]}),"\n",(0,i.jsx)(n.p,{children:"This server is running: Windows Server 2019 Datacenter and is part of my Active Directory domain; I've also created a service account called: webjea_services."}),"\n",(0,i.jsx)(n.h3,{id:"setup-webjea",children:"Setup WebJEA"}),"\n",(0,i.jsx)(n.p,{children:"Once we have a Windows Server, now it's time to set up WebJEA!"}),"\n",(0,i.jsx)(n.h4,{id:"setup-self-signed-certificate",children:"Setup Self-Signed Certificate"}),"\n",(0,i.jsx)(n.p,{children:"If you already have a certificate you can use, skip this step. In the case of this guide, we are going to use a self-signed certificate."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Log"})," into the WebJEA ",(0,i.jsx)(n.strong,{children:"Windows server"})," using your service account ",(0,i.jsx)(n.em,{children:"(in my case, it is: luke\\webjea_services)"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Open ",(0,i.jsx)(n.strong,{children:"PowerShell"})," ISE as Administrator, and after replacing the DNS name to suit your own environment, ",(0,i.jsx)(n.strong,{children:"run the following to create the Root CA and Self-Signed certificate"}),":"]}),"\n",(0,i.jsx)(n.p,{children:"Now that the Root CA is created and trusted, we want to create the actual self-signed certificate:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'#Create RootCA\n$rootCA = New-SelfSignedCertificate -Subject "CN=MyRootCA"  `\n-KeyExportPolicy Exportable  `\n-KeyUsage CertSign,CRLSign,DigitalSignature  `\n-KeyLength 2048  `\n-KeyUsageProperty All  `\n-KeyAlgorithm \'RSA\'  `\n-HashAlgorithm \'SHA256\'  `\n-Provider "Microsoft Enhanced RSA and AES Cryptographic Provider"  `\n-NotAfter (Get-Date).AddYears(10)\n\n#Create Self-Signed Certificate\n$cert = New-SelfSignedCertificate -Subject "CN=WEBJEA-P01.luke.geek.nz"  `\n-Signer $rootCA  `\n-KeyLength 2048  `\n-KeyExportPolicy Exportable  `\n-DnsName WEBJEA-P01.luke.geek.nz, WEBJEA, WEBJEA-P01  `\n-KeyAlgorithm \'RSA\'  `\n-HashAlgorithm \'SHA256\'  `\n-Provider "Microsoft Enhanced RSA and AES Cryptographic Provider"  `\n-NotAfter (Get-Date).AddYears(10)\n$certhumbprint = $cert.Thumbprint\n\n#Add Root CA to Trusted Root Authorities\nNew-Item -ItemType Directory \'c:\\WebJea\\certs\' -Force\nExport-Certificate -Cert $rootCA -FilePath "C:\\WebJEA\\certs\\rootCA.crt" -Force\nImport-Certificate -CertStoreLocation \'Cert:\\LocalMachine\\Root\' -FilePath "C:\\WebJEA\\certs\\rootCA.crt"\n\nWrite-Host -ForegroundColor Green -Object "Copy this: $certhumbprint - The Thumbprint is needed for the DSCDeploy.ps1 script"\n'})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Copy"})," the ",(0,i.jsx)(n.strong,{children:"Thumbprint"})," ",(0,i.jsx)(n.em,{children:"(if you do this manually, make sure it is the Thumbprint of the certificate, not the Trusted Root CA certificate)"}),"; we will need that later."]}),"\n",(0,i.jsx)(n.h4,{id:"setup-a-group-managed-service-account",children:"Setup a Group Managed Service Account"}),"\n",(0,i.jsxs)(n.p,{children:["This is the ",(0,i.jsx)(n.strong,{children:"account"})," we will use to ",(0,i.jsx)(n.strong,{children:"run WebJEA under"}),"; it ",(0,i.jsx)(n.strong,{children:"can"})," be a normal ",(0,i.jsx)(n.strong,{children:"Active Directory"})," user ",(0,i.jsx)(n.strong,{children:"account"})," if you feel more comfortable or want to assign permissions to."]}),"\n",(0,i.jsx)(n.p,{children:"I am using a normal AD (Active Directory) service account in this guide because I am using Microsoft Entra ID Domain Services as my Domain Controller, and GMSA is not currently supported. I have also seen some scripts require the ability to create and read user-specific files. However, it's always good to follow best practices where possible."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"Note: Group Managed Services accounts automatically renew and update the passwords for the accounts; they allow for additional security. You can read more about them here:"})," ",(0,i.jsx)(n.a,{href:"https://learn.microsoft.com/en-us/windows-server/security/group-managed-service-accounts/group-managed-service-accounts-overview?WT.mc_id=AZ-MVP-5004796",title:"Group Managed Service Accounts Overview",children:(0,i.jsx)(n.em,{children:"Group Managed Service Accounts Overview"})}),(0,i.jsx)(n.em,{children:"."})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'#Create A group MSA account\nAdd-kdsrootkey -effectivetime ((get-date).addhours(-10))\nNew-ADServiceAccount -name webjeagmsa1 -dnshostname (get-addomaincontroller).hostname -principalsallowedtoretrievemanagedpassword WEBJEA-P01.luke.geek.nz\n\n#Create AD Group\nNew-ADGroup -Name "WebJEAAdmins" -SamAccountName WebJEAAdmins -GroupCategory Security -GroupScope Global -DisplayName "WebJEA - Admins" -Description "Members of this group are WebJEA Admins"\n\nInstall-adserviceaccount webjeagmsa1\nAdd-ADGroupmember -identity "luke.geek.nz\\WebJEAAdmins" -members (get-adserviceaccount webjeagmsa1).distinguishedname\n'})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Add"})," the ",(0,i.jsx)(n.strong,{children:"WebJEAAdmins group"})," to the Administrators group of your WebJEA server."]}),"\n",(0,i.jsx)(n.h4,{id:"install-webjea",children:"Install WebJEA"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Download"})," the ",(0,i.jsx)(n.strong,{children:"latest"})," ",(0,i.jsx)(n.a,{href:"https://github.com/markdomansky/WebJEA/releases",title:"WebJEA - Releases",children:"release package"})," ",(0,i.jsx)(n.em,{children:"(zip file)"})," onto the ",(0,i.jsx)(n.strong,{children:"WebJEA"})," Windows server"]}),"\n",(0,i.jsx)(n.p,{children:"Extract it, and you should have 2 files and 2 folders:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Site\\"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"StarterFiles\\"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"DSCConfig.inc.ps1"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"DSCDeploy.ps1"}),"\n",(0,i.jsx)(n.p,{children:"Open PowerShell ISE as Administrator and open DSCDeploy.ps1"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsxs)(n.strong,{children:["WebJEA uses PowerShell DSC ",(0,i.jsx)(n.em,{children:"(Desired State Configuration)"})," to set up a lot of the setup"]}),"."]}),"\n",(0,i.jsx)(n.p,{children:"DSC will do the following for us:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Install IIS"}),"\n",(0,i.jsx)(n.li,{children:"Create the App Pool and set the identity"}),"\n",(0,i.jsx)(n.li,{children:"Create and migrate the Site files to the IIS website folder"}),"\n",(0,i.jsx)(n.li,{children:"Configure SSL (if we were using it)"}),"\n",(0,i.jsx)(n.li,{children:"Update the WebJEA config files to point towards the script and log locations"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Even though most of the work will be automated for us by Desired State Configuration, we have to do some configurations to work in our environment."}),"\n",(0,i.jsxs)(n.p,{children:["I am not using a Group Managed Service Account. Instead, I will use a normal AD account as a service account ",(0,i.jsx)(n.em,{children:"(i.e. webjea_services)"}),", but if you use a GMSA, you need to put the username in the AppPoolUserName; no credentials are needed ",(0,i.jsx)(n.em,{children:"(make sure the GMSA has access to the server)"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Change"})," the ",(0,i.jsx)(n.strong,{children:"following variables"})," to suit ",(0,i.jsx)(n.strong,{children:"your setup"}),"; in my case, I have moved WebJEA resources to their own folder, so it's not sitting directly on the OS drive, but until its own Folder."]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Variable"}),(0,i.jsx)(n.th,{children:"Note"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"NodeName"}),(0,i.jsx)(n.td,{children:"This is a DSC variable, leave this."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"WebAppPoolName"}),(0,i.jsx)(n.td,{children:"WebApp Pool Name, it may be best to leave this as: WebJEA, however you   can change this."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"AppPoolUserName"}),(0,i.jsx)(n.td,{children:"Add in your GMSA or Domain Service account username"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"AppPoolPassword"}),(0,i.jsx)(n.td,{children:"If using a Domain Account, add the password in here, if GSMA leave bank"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"WebJEAIISURI"}),(0,i.jsx)(n.td,{children:"This is the IIS URL, ie server/WebJEA. You can change this if you want."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"WebJEAIISFolder"}),(0,i.jsx)(n.td,{children:"IIS folder location, this can be changed if you wanted to move IIS to   another drive or location."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"WebJEASourceFolder"}),(0,i.jsx)(n.td,{children:"The source folder, this is the source folder for the WebJEA files when   they are first downloaded and extracted (ie Downloads directory)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"WebJEAScriptsFolder"}),(0,i.jsx)(n.td,{children:"This is where the scripts folder will be placed (ie WebJEA installed)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"WebJEAConfigPath"}),(0,i.jsx)(n.td,{children:"This is where the config file will be placed (ie WebJEA installed - it   needs to be the same location as the Scripts folder)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"WebJEALogPath"}),(0,i.jsx)(n.td,{children:"WebJEA log path"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"WebJEA_Nlog_LogFile"}),(0,i.jsx)(n.td,{children:"WebJEA system log location"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"WebJEA_Nlog_UsageFile"}),(0,i.jsx)(n.td,{children:"WebJEA usage log location"})]})]})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"WebJEA - DSC",src:t(78819).A+"",width:"890",height:"363"})}),"\n",(0,i.jsxs)(n.p,{children:["One thing to note is that the DSCDeploy.ps1 is calling ",(0,i.jsx)(n.em,{children:"(dot sourcing)"})," the DSCConfig deploy script; by default, it is looking for it in the same folder as the DSCDeploy.ps1 folder."]}),"\n",(0,i.jsx)(n.p,{children:"If you just opened up PowerShell ISE, you may notice that you are actually in C:\\Windows\\System32, so it won't be able to find the script to run; you can either change the script to point directly to the file location, or you can change the directory you are into to match the files, in my case in the Script pane I run the following:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"cd 'C:\\Users\\webjea_services\\Downloads\\webjea-1.1.157.7589'\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Now ",(0,i.jsx)(n.strong,{children:"run"})," the ",(0,i.jsx)(n.strong,{children:"script"})," and ",(0,i.jsx)(n.strong,{children:"wait"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"If you get an error saying that the script is not digitally signed, run the following in the script pane:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Set-ExecutionPolicy -Scope Process -ExecutionPolicy Bypass\n"})}),"\n",(0,i.jsx)(n.p,{children:"This is because the PowerShell execution policy hasn't been set; depending on the scripts you are running, you may have to update the execution policy for the entire system, but for now, we will set it to Bypass for this process only, now re-run the script again, you should see DSC kick-off and start your configuration and setup of IIS and the WebJEA site."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"WebJEA - DSC",src:t(2071).A+"",width:"1284",height:"209"})}),"\n",(0,i.jsx)(n.p,{children:"You should also see the files/folders starting to be created!"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Note: If you need to make a configuration change, please change it in the DSCDeploy.ps1, DSC will ensure that the configuration is applied as per your configuration and rerun the script, i.e. if you need to replace the certificate from a self-signed certificate to a managed PKI certificate."})}),"\n",(0,i.jsxs)(n.p,{children:["Once DSC has been completed, your ",(0,i.jsx)(n.strong,{children:"server should now be running IIS and the WebJEA site"})]}),"\n",(0,i.jsx)(n.p,{children:"To add the IIS Management Tool, this is not required but will help you manage IIS, run the following PowerShell cmdlet:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Enable-WindowsOptionalFeature -Online -FeatureName IIS-ManagementConsole\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Open an Internet Browser and navigate to ",(0,i.jsx)(n.em,{children:"(your equivalent of)"}),": ",(0,i.jsx)(n.a,{href:"https://webjea-p01.luke.geek.nz/WebJEA",title:"https://webjea-p01.luke.geek.nz/WebJEA",children:"https://webjea-p01.luke.geek.nz/WebJEA"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"If you need assistance finding the Website path, open the Internet Information (IIS) Manager, installed and uncollapse Sites, Default WebSite, right-click WebJEA, Manage Application and select Browse."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"WebJEA - IIS",src:t(47137).A+"",width:"504",height:"448"})}),"\n",(0,i.jsx)(n.p,{children:"If successful, you should get a username and password prompt:"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"WebJEA - IIS",src:t(16161).A+"",width:"1047",height:"602"})}),"\n",(0,i.jsx)(n.p,{children:"That's normal - it means you haven't been given access and now need to configure it."}),"\n",(0,i.jsx)(n.h3,{id:"configure-webjea",children:"Configure WebJEA"}),"\n",(0,i.jsxs)(n.p,{children:["Now that WebJEA has been set up, it is time to configure it; the first thing we need to do is create a Group for WebJEA admins ",(0,i.jsx)(n.em,{children:"(see all scripts)"}),"."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Create an Active Directory group for:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"WebJEA-Admins"})}),"\n",(0,i.jsx)(n.li,{children:"WebJEA-Users"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Add"})," your ",(0,i.jsx)(n.strong,{children:"account"})," to the: WebJEA-",(0,i.jsx)(n.strong,{children:"Admins group"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Navigate"})," to your ",(0,i.jsx)(n.strong,{children:"WebJEA scripts folder"}),"; in my case, I set it up under c:\\WebJEA\\Scripts:"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"WebJEA - Scripts",src:t(80985).A+"",width:"485",height:"158"})}),"\n",(0,i.jsxs)(n.p,{children:["Before we go any further, ",(0,i.jsx)(n.strong,{children:"take"})," a ",(0,i.jsx)(n.strong,{children:"Backup"}),' of the config.json file, rename it to "config.bak".']}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"I recommend using Visual Studio Code to edit the config.json to help avoid any syntax issues."})}),"\n",(0,i.jsxs)(n.p,{children:["Now right click ",(0,i.jsx)(n.strong,{children:"config.json"})," and open it to ",(0,i.jsx)(n.strong,{children:"edit"})]}),"\n",(0,i.jsx)(n.p,{children:"This file is the glue that holds WebJEA together."}),"\n",(0,i.jsxs)(n.p,{children:["We are going to make a few ",(0,i.jsx)(n.strong,{children:"edits"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Feel free to update the ",(0,i.jsx)(n.strong,{children:"Title"})," to match your company or Teams"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Add in"})," the WebJEA-",(0,i.jsx)(n.strong,{children:"Admins"})," group earlier ",(0,i.jsx)(n.em,{children:"(include the Domain Name)"})," into the permitted group's session - this controls access for ALL scripts."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Note the: \\\\ for each path that is required. If you get a syntax error when attempting to load the WebJEA webpage, this is most likely missing."})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"WebJEA - Demo",src:t(38414).A+"",width:"1020",height:"313"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Save the config file"})," and ",(0,i.jsx)(n.strong,{children:"relaunch"})," the ",(0,i.jsx)(n.strong,{children:"WebJEA"})," webpage. It should now load without prompting for a username and password."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Set"})," the PowerShell ",(0,i.jsx)(n.strong,{children:"execution policy"})," on the machine to Unrestricted so that you can run any PowerShell scripts on it:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Set-ExecutionPolicy -ExecutionPolicy Unrestricted -Scope LocalMachine\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"WebJEA - Demo",src:t(71372).A+"",width:"1251",height:"593"})}),"\n",(0,i.jsx)(n.p,{children:"If you get an: AuthorizationManager check failed error, it is because the PowerShell scripts are still in a blocked state from being downloaded from the internet, run the following command to unblock them, then refresh the WebJEA webpage:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Get-ChildItem -Path 'C:\\WebJEA\\scripts\\' -Recurse | Unblock-File\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"You now have a base WebJEA install"}),"! By default, WebJEA comes with 2 PowerShell files:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"overview.ps1"}),"\n",(0,i.jsx)(n.li,{children:"validate.ps1"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"You may have noticed these in the config.json file; WebJEA has actually run the overview.ps1 file as soon as the page loads, so you can have scripts run before running another one, which is handy when you need to know the current state of something before taking action."}),"\n",(0,i.jsx)(n.p,{children:"The validate.ps1 script is an excellent resource to check out the parameter types used to generate the forms."}),"\n",(0,i.jsx)(n.h3,{id:"setup-azure-virtual-machine-startstop",children:"Setup Azure Virtual Machine Start/Stop"}),"\n",(0,i.jsx)(n.p,{children:"Now that we have a working WebJEA install, it's time to set up the Azure VM Start/Stop script for this demo."}),"\n",(0,i.jsxs)(n.p,{children:["On the WebJEA server, we need to ",(0,i.jsx)(n.strong,{children:"install"})," the ",(0,i.jsx)(n.strong,{children:"Azure PowerShell modules"}),", run the following in Powershell as Administrator:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Install-Module Az -Scope AllUsers\n"})}),"\n",(0,i.jsx)(n.h4,{id:"create-service-principal",children:"Create Service Principal"}),"\n",(0,i.jsxs)(n.p,{children:["Once the Az PowerShell modules are installed, we need to ",(0,i.jsx)(n.strong,{children:"set"})," a ",(0,i.jsx)(n.strong,{children:"Service Principal"})," for the PowerShell script to connect to Azure to manage our Virtual Machines."]}),"\n",(0,i.jsx)(n.p,{children:"Run the following PowerShell cmdlet to connect to Azure:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Connect-AzAccount\n"})}),"\n",(0,i.jsx)(n.p,{children:"Now that we are connected to Azure, we now need to create the SPN, run the following:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"$sp = New-AzADServicePrincipal -DisplayName WebJEA-AzureResourceCreator -Role Contributor\n$BSTR = [System.Runtime.InteropServices.Marshal]::SecureStringToBSTR($sp.Secret)\n$UnsecureSecret = [System.Runtime.InteropServices.Marshal]::PtrToStringAuto($BSTR)\n"})}),"\n",(0,i.jsx)(n.p,{children:"Now you have created an SPN called: WebJEA-AzureResourceCreator. We now need to grab the Tenant ID, run the following:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Get-AzContext | Select-Object Tenant\n"})}),"\n",(0,i.jsx)(n.p,{children:"Now that we have the SPN and Tenant ID, it's time to test connectivity."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"# Login using service principal \n$TenantId = 'TENANTIDHERE' \n$ApplicationId = 'APPLICATIONIDHERE'  \n$Secret = ConvertTo-SecureString -String 'SECRETSTRINGHERE' -AsPlainText -Force \n$Credential = [System.Management.Automation.PSCredential]::New($ApplicationId, $Secret) \nConnect-AzAccount -ServicePrincipal -Credential $Credential -TenantId $TenantId\n"})}),"\n",(0,i.jsx)(n.p,{children:"Copy the TenantID into the TenantID section"}),"\n",(0,i.jsx)(n.p,{children:"Type:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"$sp.ApplicationID\n"})}),"\n",(0,i.jsx)(n.p,{children:"To retrieve the ApplicationID created from the SPN in the previous step and add it into the ApplicationID part."}),"\n",(0,i.jsx)(n.p,{children:"Type in:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"$UnsecureSecret\n"})}),"\n",(0,i.jsx)(n.p,{children:"To retrieve the Secret, created in the SPN and add it to the String."}),"\n",(0,i.jsx)(n.p,{children:"Now run the snippet, and you should be successfully connected to Azure."}),"\n",(0,i.jsx)(n.h4,{id:"create-get-vm-script",children:"Create Get-VM script"}),"\n",(0,i.jsxs)(n.p,{children:["One of the features of WebJEA is the ability to run scripts on page load. So, we will get the current Power State of our Azure VMs, in the ",(0,i.jsx)(n.strong,{children:"WebJEA scripts directory"})," to create a new PS1 file called: ",(0,i.jsx)(n.strong,{children:"Get-VM.ps1"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"Add the following script to it:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"# Login using service principal \n$TenantId = 'TENANTIDHERE' \n$ApplicationId = 'APPLICATIONIDHERE'  \n$Secret = ConvertTo-SecureString -String 'SECRETSTRINGHERE' -AsPlainText -Force \n$Credential = [System.Management.Automation.PSCredential]::New($ApplicationId, $Secret) \nConnect-AzAccount -ServicePrincipal -Credential $Credential -TenantId $TenantId\nGet-AzVM -Status | Select-Object Name, PowerState, ResourceGroupName\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Save"})," the file."]}),"\n",(0,i.jsx)(n.h4,{id:"create-set-vm-script",children:"Create Set-VM script"}),"\n",(0,i.jsxs)(n.p,{children:["Now, it's time to create the Script to Start/Stop the Virtual Machine. In the ",(0,i.jsx)(n.strong,{children:"WebJEA scripts directory"}),", create a new PS1 file called: ",(0,i.jsx)(n.strong,{children:"Set-VM.ps1"})]}),"\n",(0,i.jsx)(n.p,{children:"Add the following script to it:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"#Variables\n[CmdletBinding(SupportsShouldProcess=$True,ConfirmImpact='Low')]\nparam\n(\n[Parameter(Position=1, mandatory=$true,\nHelpMessage='What is the name of the Azure Virtual Machine?')]\n$VMName,\n[Parameter(Position=2, mandatory=$true,\nHelpMessage='What is the name of the Azure Resource Group that the Virtual Machine is in?')]\n$RGName,\n[Parameter(Position=3, mandatory=$true,\nHelpMessage='What action do you want to do?')]\n[VALIDATESET('Start','Stop')] \n$VMAction\n)\n# Login using service principal \n$TenantId = 'TENANTIDHERE' \n$ApplicationId = 'APPLICATIONIDHERE'  \n$Secret = ConvertTo-SecureString -String 'SECRETSTRINGHERE' -AsPlainText -Force \n$Credential = [System.Management.Automation.PSCredential]::New($ApplicationId, $Secret) \nConnect-AzAccount -ServicePrincipal -Credential $Credential -TenantId $TenantId\nGet-AzVM -Status | Select-Object Name, PowerState, ResourceGroupName\nif ($VMAction -eq \"Start\")\n{\n     Start-AzVM -Name $VMName -ResourceGroupName $RGName -Confirm:$false  -Force\n    return\n}\nelseif ($VMAction -eq \"Stop\")\n{\n       Stop-AzVM -Name $VMName -ResourceGroupName $RGName -Confirm:$false  -Force\n}\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Save"})," the file."]}),"\n",(0,i.jsx)(n.h4,{id:"set-vm-in-webjea-config",children:"Set VM in WebJEA Config"}),"\n",(0,i.jsx)(n.p,{children:"Now that the scripts have been created, it's time to add them to WebJEA to use."}),"\n",(0,i.jsx)(n.p,{children:"Navigate to your scripts file and make a backup of the config.json file, then edit: config.json"}),"\n",(0,i.jsx)(n.p,{children:'On the line beneath the "onloadscript": "overview.ps1" file, add:'}),"\n",(0,i.jsx)(n.p,{children:"},"}),"\n",(0,i.jsx)(n.p,{children:"Then add in:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'{\n"id": "StartStopAzVM",\n"displayname": "StartStop-AzVM",\n"synopsis": "Starts or Stops Azure Based VMs",\n"permittedgroups": [".\\\\Administrators", "luke.geek.nz\\\\WebJEAAdmins"],\n"script": "Set-VM.ps1",\n"onloadscript": "Get-VM.ps1"\n }\n'})}),"\n",(0,i.jsx)(n.p,{children:"So your config.json should look similar to:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",metastring:'title="config.json"',children:'\n{\n    "Title": "Luke Web Automation",\n    "defaultcommandid": "overview",\n    "basepath": "C:\\\\WebJEA\\\\scripts",\n    "LogParameters": true,\n    "permittedgroups": [".\\\\Administrators", "luke.geek.nz\\\\WebJEAAdmins"],\n    "commands": [\n{\n        "id": "overview",\n        "displayname": "Overview",\n        "synopsis": "Congratulations, WebJEA is now working!  We\'ve pre-loaded a demo script that will help you verify everything is working.  <br/><i>Tip: You can use the synopsis property of default command to display any text you want.  Including html.</i>",\n        "permittedgroups": [".\\\\Administrators"],\n        "script": "validate.ps1",\n        "onloadscript": "overview.ps1"\n    },\n{\n        "id": "StartStopAzVM",\n        "displayname": "StartStop-AzVM",\n        "synopsis": "Starts or Stops Azure Based VMs",\n        "permittedgroups": [".\\\\Administrators", "luke.geek.nz\\\\WebJEAAdmins"],\n        "script": "Set-VM.ps1",\n        "onloadscript": "Get-VM.ps1"\n    }\n\n]\n}\n\n'})}),"\n",(0,i.jsx)(n.h3,{id:"test-azure-virtual-machine-startstop",children:"Test Azure Virtual Machine Start/Stop"}),"\n",(0,i.jsxs)(n.p,{children:["Now that the scripts have been created ",(0,i.jsx)(n.strong,{children:"open"})," the ",(0,i.jsx)(n.strong,{children:"WebJEA"})," webpage."]}),"\n",(0,i.jsxs)(n.p,{children:["Click on the ",(0,i.jsx)(n.strong,{children:"StartStop-AzVM"})," page ",(0,i.jsx)(n.em,{children:"(it may take a few seconds to load, as it is running the Get-VM script"}),"). You should be greeted by a window similar to below:"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"WebJEA - Demo",src:t(89979).A+"",width:"1631",height:"1072"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Congratulations, you have now set up WebJEA and can Start/Stop any Azure Virtual Machines using self-service!"})}),"\n",(0,i.jsx)(n.h3,{id:"additional-notes",children:"Additional Notes"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"There is room for improvement around error checking, doing more with the scripts, such as sending an email when triggered, etc., to remind the server to be powered off."}),"\n",(0,i.jsx)(n.li,{children:"Because most of the configuration is JSON/PowerShell files, you could have the entire scripts folder in a git repository to make changes, roll back and keep version history."}),"\n",(0,i.jsx)(n.li,{children:"Remove any hard coding of any secrets to connect to Azure (as an example) from the scripts and implement a password management tool with API access or even the Windows Credential Manager. You want a system where you can easily update the passwords of accounts, limit access and prevent anything from being stored in plain text."}),"\n",(0,i.jsx)(n.li,{children:"Using the permitted group's section of the config.json file, you can restrict the ability for certain groups to run scripts this way, and you can set granular control on who can do what."}),"\n",(0,i.jsx)(n.li,{children:"If you use a normal Active Directory user account as the service account - then for added security, make sure that the WebJEA server is the only device that - that account can be logged in as and only has the permissions assigned that it needs to, look at implementing PIM (Privilaged Access Management) for some tasks so it only has access at the time that it needs it."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},16161:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/webjea_authentication-099fdcb7045f35edd4ecdf6c19dfbae4.png"},38414:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/webjea_democonfig-e53400505488bf42c7cb0dfa4f21aae9.png"},78819:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/webjea_dsc-f0e0542599393fcd2f3e18abe3f09208.png"},47137:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/webjea_iis_authentication-fae19013434302ea12a734eeedbc981a.png"},71372:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/webjea_initialoverview-cd702c782bbad98763e43ef95f6f40fc.png"},80985:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/webjea_scripts-3f2ad25444e77d4ae541078fa58084af.png"},2071:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/webjea_startingdsc-66c79c87ae373469ddb1b33a42b53b88.png"},89979:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/webjea_startstopazvm-db8d952fbe0a4e9a77c1230cfd3c307d.png"},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var r=t(96540);const i={},s=r.createContext(i);function o(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(s.Provider,{value:n},e.children)}},18390:e=>{e.exports=JSON.parse('{"permalink":"/2021/07/18/implement-webjea-for-self-service-azure-resource-creation-with-powershell","source":"@site/blog/2021-07-18-implement-webjea-for-self-service-azure-resource-creation-with-powershell.md","title":"Implement WebJEA for self-service Start/Stop of Azure Virtual Machines","description":"WebJEA allows you to build web forms for any PowerShell script dynamically. WebJEA automatically parses the script at page load for description, parameters and validation, then dynamically builds a form to take input and display formatted output!","date":"2021-07-18T00:00:00.000Z","tags":[{"inline":true,"label":"Azure","permalink":"/tags/azure"}],"readingTime":14.24,"hasTruncateMarker":false,"authors":[{"name":"Luke Murray","title":"Author","url":"https://luke.geek.nz","imageURL":"https://luke.geek.nz/img/logo.png","key":"Luke","page":null}],"frontMatter":{"title":"Implement WebJEA for self-service Start/Stop of Azure Virtual Machines","authors":["Luke"],"tags":["Azure"],"date":"2021-07-18 00:00:00 +1300","toc":true,"header":{"teaser":"/uploads/webjea_startstopazvm.png"}},"unlisted":false,"prevItem":{"title":"AVD-Collect - Azure Virtual Desktop Diagnostics and Logging","permalink":"/powershell/avd-collect"},"nextItem":{"title":"Well-Architected Framework Azure infrastructure review with PSRule for Azure","permalink":"/2021/07/13/validate-that-your-azure-resources-are-deployed-per-the-well-architected-framework"}}')}}]);