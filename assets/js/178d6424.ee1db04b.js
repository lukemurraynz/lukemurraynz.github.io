"use strict";(self.webpackChunklukemurraynz=self.webpackChunklukemurraynz||[]).push([[24939],{91517:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>l});var i=n(74848),a=n(28453);const r={title:"Deploying a Streamlit App to Azure Container Apps",metaDescription:"Learn how to deploy a Streamlit application to Azure Container Apps using Docker and GitHub Codespaces.",date:new Date("2024-11-18T05:27:32.929Z"),tags:["Azure"],categories:["Azure"],authors:["Luke"],slug:"azure/deploy-streamlit-to-container-apps",keywords:["azure","streamlit","container apps","docker","deployment","python","serverless"],description:"Learn how to deploy a Streamlit application to Azure Container Apps using Docker and GitHub Codespaces."},o=void 0,s={permalink:"/azure/deploy-streamlit-to-container-apps",source:"@site/blog/2024-11-18-streamlit-azcontainerapps/index.mdx",title:"Deploying a Streamlit App to Azure Container Apps",description:"Learn how to deploy a Streamlit application to Azure Container Apps using Docker and GitHub Codespaces.",date:"2024-11-18T05:27:32.929Z",tags:[{inline:!0,label:"Azure",permalink:"/tags/azure"}],readingTime:4.49,hasTruncateMarker:!0,authors:[{name:"Luke Murray",title:"Author",url:"https://luke.geek.nz",imageURL:"https://luke.geek.nz/img/logo.png",key:"Luke",page:null}],frontMatter:{title:"Deploying a Streamlit App to Azure Container Apps",metaDescription:"Learn how to deploy a Streamlit application to Azure Container Apps using Docker and GitHub Codespaces.",date:"2024-11-18T05:27:32.929Z",tags:["Azure"],categories:["Azure"],authors:["Luke"],slug:"azure/deploy-streamlit-to-container-apps",keywords:["azure","streamlit","container apps","docker","deployment","python","serverless"],description:"Learn how to deploy a Streamlit application to Azure Container Apps using Docker and GitHub Codespaces."},unlisted:!1,nextItem:{title:"New Zealand North Latency Testing and Results",permalink:"/azure/nz-north-latency-testing"}},c={authorsImageUrls:[void 0]},l=[];function p(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",img:"img",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.a,{href:"https://streamlit.io/",children:"Streamlit"})," is an excellent tool for creating interactive web applications with Python."]}),"\n",(0,i.jsxs)(t.p,{children:["In this post, we will deploy a Streamlit application to ",(0,i.jsx)(t.a,{href:"https://learn.microsoft.com/azure/container-apps/overview?WT.mc_id=AZ-MVP-5004796",children:"Azure Container Apps"}),". ",(0,i.jsx)(t.a,{href:"https://learn.microsoft.com/azure/container-apps/overview?WT.mc_id=AZ-MVP-5004796",children:"Azure Container Apps"})," is a fully managed serverless container service that allows you to run your containerized applications without having to manage the underlying infrastructure."]}),"\n",(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsxs)(t.p,{children:["For this article, you have access to an Azure subscription and have permission to deploy resources. If you don't have an Azure subscription, you can create a ",(0,i.jsx)(t.a,{href:"https://azure.microsoft.com/pricing/purchase-options/azure-account?icid=azurefreeaccount&WT.mc_id=AZ-MVP-5004796",children:"free account"})," in just a couple of minutes."]})}),"\n",(0,i.jsx)(t.p,{children:"Today, we are going to take a base Streamlit example application, and deploy it to Azure Container Apps."}),"\n",(0,i.jsx)(t.admonition,{type:"info",children:(0,i.jsxs)(t.p,{children:["I will be using a GitHub Codespace; feel free to reference my public repository template: ",(0,i.jsx)(t.a,{href:"https://github.com/lukemurraynz/Codespace_IaC_Coding",children:"lukemurraynz/Codespace_IaC_Coding"})," as a Codespace template."]})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"Streamlit Application",src:n(63019).A+"",width:"1420",height:"1270"})}),"\n",(0,i.jsx)(t.p,{children:"Let us start off with the Streamlit application."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",metastring:'title="streamlit_app.py"',children:'import altair as alt\nimport numpy as np\nimport pandas as pd\nimport streamlit as st\n\n"""\n# Welcome to Streamlit!\n\nEdit `/streamlit_app.py` to customize this app to your heart\'s desire :heart:.\nIf you have any questions, check out our [documentation](https://docs.streamlit.io) and [community\nforums](https://discuss.streamlit.io).\n\nIn the meantime, below is an example of what you can do with just a few lines of code:\n"""\n\nnum_points = st.slider("Number of points in spiral", 1, 10000, 1100)\nnum_turns = st.slider("Number of turns in spiral", 1, 300, 31)\n\nindices = np.linspace(0, 1, num_points)\ntheta = 2 * np.pi * num_turns * indices\nradius = indices\n\nx = radius * np.cos(theta)\ny = radius * np.sin(theta)\n\ndf = pd.DataFrame({\n    "x": x,\n    "y": y,\n    "idx": indices,\n    "rand": np.random.randn(num_points),\n})\n\nst.altair_chart(alt.Chart(df, height=700, width=700)\n    .mark_point(filled=True)\n    .encode(\n        x=alt.X("x", axis=None),\n        y=alt.Y("y", axis=None),\n        color=alt.Color("idx", legend=None, scale=alt.Scale()),\n        size=alt.Size("rand", legend=None, scale=alt.Scale(range=[1, 150])),\n    ))\n\n'})}),"\n",(0,i.jsxs)(t.p,{children:["The next step is to create a ",(0,i.jsx)(t.code,{children:"requirements.txt"})," file specifying the Streamlit application's dependencies. This will be used to install the Python dependencies for the image."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-plaintext",metastring:'title="requirements.txt"',children:"altair\npandas\nstreamlit\n"})}),"\n",(0,i.jsxs)(t.p,{children:["Now that we have our Streamlit application, we need to create a Dockerfile to containerize the application. In this example, we use the official Python image from the Docker Hub as the base image. We then copy the application code into the container, install the dependencies, and define the command to run the Streamlit application using port 8080 ",(0,i.jsx)(t.em,{children:"(the default port for Streamlit is 8501, but we are using 8080 for this example as a common port)"}),"."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-Dockerfile",metastring:'title="Dockerfile"',children:'# Use the official Python image from the Docker Hub\nFROM python:3.12.7-slim\n\n# Set environment variable for the port\nENV PORT=8080\n\n# Expose the port that the application will run on\nEXPOSE 8080\n\n# Set the working directory inside the container\nWORKDIR /usr/src/app\n\n# Copy the requirements file into the container\nCOPY requirements.txt ./\n\n# Install the dependencies specified in the requirements file\nRUN pip install --no-cache-dir -r requirements.txt\n\n# Copy the rest of the application code into the container\nCOPY . .\n\n# Create a non-root user and switch to it\nRUN useradd -m appuser && chown -R appuser /usr/src/app\nUSER appuser\n\n# Define the command to run the Streamlit application\nENTRYPOINT ["streamlit", "run", "app.py", "--server.port=8080"]\n\n# Add labels for metadata\nLABEL maintainer="luke@luke.geke.nz"\nLABEL version="1.0"\nLABEL description="Streamlit application"\n\n# Health check to ensure the application is running\nHEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \\\n  CMD curl --fail http://localhost:8080/_stcore/health || exit 1\n'})}),"\n",(0,i.jsxs)(t.admonition,{type:"tip",children:[(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.a,{href:"https://github.com/Azure/draft",children:"Draft"})," is an open-source project that streamlines Kubernetes development. It takes a non-containerized application and generates the DockerFiles, Kubernetes manifests, Helm charts, Kustomize configurations, and other artifacts associated the application. The Azure Kubernetes Service ",(0,i.jsx)(t.em,{children:"(AKS)"})," DevX extension for Visual Studio Code enhances non-cluster experiences, allowing you to create deployment files to deploy your applications to AKS. Draft is the available feature included in the DevX extension."]}),(0,i.jsx)(t.p,{children:"I used Draft, and the DevX extension was used to draft the first version of the streamlet dockerfile."}),(0,i.jsxs)(t.p,{children:["Reference: ",(0,i.jsx)(t.a,{href:"https://learn.microsoft.com/azure/aks/draft-devx-extension-aks?WT.mc_id=AZ-MVP-5004796",children:"Use Draft and the DevX extension for Visual Studio Code with Azure Kubernetes Service (AKS)"})]})]}),"\n",(0,i.jsx)(t.p,{children:"To build this image, I will use Docker on a GitHub Codespace to build the image locally and test it. Once confirmed, we can push it to an Azure Container Registry, which can then be used to deploy the image to Azure Container Apps."}),"\n",(0,i.jsxs)(t.p,{children:["We can easily test and build the image locally in a Codespace using the ",(0,i.jsx)(t.a,{href:"https://code.visualstudio.com/docs/containers/overview?WT.mc_id=AZ-MVP-5004796",children:"Docker extension"})," in Visual Studio Code."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"Docker Build",src:n(21439).A+"",width:"1912",height:"925"})}),"\n",(0,i.jsx)(t.p,{children:"Now that we have tested the image locally, we can push it to an Azure Container Registry."}),"\n",(0,i.jsx)(t.admonition,{type:"info",children:(0,i.jsxs)(t.p,{children:["You can also refer to a previous article ",(0,i.jsx)(t.a,{href:"https://luke.geek.nz/azure/push-docker-images-to-acr-using-github-codespaces/",children:"Push Docker Images to Azure Container Registry with GitHub Codespaces"})," for more information on how to push the image to an Azure Container Registry using the command line from the public dockerhub registry."]})}),"\n",(0,i.jsxs)(t.p,{children:["To push the image, we are going to use the docker extension again to do the push and tag to the ",(0,i.jsx)(t.a,{href:"https://learn.microsoft.com/azure/container-registry/container-registry-intro?WT.mc_id=AZ-MVP-5004796",children:"Azure Container Registry"}),"."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"Docker Push",src:n(34647).A+"",width:"1912",height:"925"})}),"\n",(0,i.jsx)(t.p,{children:"Now that we have the image in the Azure Container Registry, we can deploy the image to Azure Container Apps."}),"\n",(0,i.jsx)(t.p,{children:"To deploy the image to Azure Container Apps, we will to create a new Azure Container Apps resource in the Azure Portal and enable public ingress on port 8080, using a Microsoft managed network."}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"Azure Container Apps",src:n(51770).A+"",width:"1912",height:"925"})}),"\n",(0,i.jsxs)(t.p,{children:["One of the best features of Azure Container Apps is the ability to scale the application to zero, so we can set up a Scale rule to scale ",(0,i.jsx)(t.em,{children:"(replicas)"})," the Container App down to 0 when not in use."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"Azure Container Apps Scale",src:n(25670).A+"",width:"1912",height:"879"})})]})}function d(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},21439:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/Streamlit_Codespace_BuildTestDockerImage-08c7668a6cb60fb1d0b3a6ecd70502e9.gif"},34647:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/Streamlit_Codespace_DeployStreamlitImageACR-f60d1624dc2a2c18b1bf94cabab82f20.gif"},51770:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/Streamlit_ContainerApps_DeployStreamlit-8613c190b6c78ce34c9103992e71cf1f.gif"},25670:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/Streamlit_ContainerApps_HTTPScaleRule-30e8e145692ee0cca09feaf020351625.gif"},63019:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/Streamlit_Demo_Example-e814590fa1eefb337d08774223dd5a21.png"},28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>s});var i=n(96540);const a={},r=i.createContext(a);function o(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);