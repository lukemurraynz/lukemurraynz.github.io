"use strict";(self.webpackChunklukemurraynz=self.webpackChunklukemurraynz||[]).push([[90280],{54183:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>n,toc:()=>c});var n=t(21624),r=t(74848),s=t(28453);const a={title:"User-Assigned Managed Identity vs Service Principal (WIF)",metaDescription:"When to choose a user-assigned managed identity over a service principal for Azure DevOps, Terraform, and landing zone automation using workload identity federation.",tags:["Azure"],categories:["Azure"],authors:["Luke"],slug:"azure/umispn",keywords:["Azure","Managed Identity","User Assigned Managed Identity","Service Principal","Workload Identity Federation","Azure DevOps","GitHub Actions","Terraform","Platform Engineering"],description:"Explore the differences between User-Assigned Managed Identity and Service Principal with WIF for streamlined Azure deployments and governance.",date:new Date("2025-09-05T00:41:09.915Z")},o=void 0,d={authorsImageUrls:[void 0]},c=[{value:"User\u2011Assigned Managed Identity (WIF) vs Service Principal (WIF)",id:"userassigned-managed-identity-wif-vs-service-principal-wif",level:2}];function l(e){const i={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",img:"img",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.p,{children:"Service Principal vs User\u2011Assigned Managed Identity? This came up again for me recently while deciding what to standardise on for Infrastructure as Code deployments."}),"\n",(0,r.jsxs)(i.p,{children:["Now that ",(0,r.jsx)(i.a,{href:"https://learn.microsoft.com/entra/workload-id/workload-identity-federation?WT.mc_id=AZ-MVP-5004796",children:"Workload Identity Federation (WIF)"})," is broadly supported, it\u2019s pretty simple to move a traditional service principal off a client secret and onto federated credentials \u2013 or create it that way from day one. So why bother with a user\u2011assigned managed identity (UAMI)?"]}),"\n",(0,r.jsx)(i.p,{children:"Because I've formed a preference over the last couple of years: for most DevOps / platform automation scenarios, I'll reach for a User\u2011Assigned Managed Identity with WIF before I create (yet another) service principal. This post walks through the why, plus where a service principal still makes sense."}),"\n","\n",(0,r.jsxs)(i.admonition,{type:"info",children:[(0,r.jsx)(i.p,{children:"In Microsoft Entra, workload identities are applications, service principals, and managed identities."}),(0,r.jsxs)(i.p,{children:["An ",(0,r.jsx)(i.a,{href:"https://learn.microsoft.com/en-us/entra/identity-platform/app-objects-and-service-principals?toc=%2Fazure%2Factive-directory%2Fworkload-identities%2Ftoc.json&bc=%2Fazure%2Factive-directory%2Fworkload-identities%2Fbreadcrumb%2Ftoc.json&WT.mc_id=AZ-MVP-5004796",children:"application"})," is an abstract entity, or template, defined by its application object. The application object is the global representation of your application for use across all tenants. The application object describes how tokens are issued, the resources the application needs to access, and the actions that the application can take."]}),(0,r.jsxs)(i.p,{children:["A ",(0,r.jsx)(i.a,{href:"https://learn.microsoft.com/en-us/entra/identity-platform/app-objects-and-service-principals?toc=%2Fazure%2Factive-directory%2Fworkload-identities%2Ftoc.json&bc=%2Fazure%2Factive-directory%2Fworkload-identities%2Fbreadcrumb%2Ftoc.json&WT.mc_id=AZ-MVP-5004796",children:"service principal"})," is the local representation, or application instance, of a global application object in a specific tenant. An application object is used as a template to create a service principal object in every tenant where the application is used. The service principal object defines what the app can actually do in a specific tenant, who can access the app, and what resources the app can access."]}),(0,r.jsxs)(i.p,{children:["A ",(0,r.jsx)(i.a,{href:"https://learn.microsoft.com/en-us/entra/identity/managed-identities-azure-resources/overview?toc=%2Fazure%2Factive-directory%2Fworkload-identities%2Ftoc.json&bc=%2Fazure%2Factive-directory%2Fworkload-identities%2Fbreadcrumb%2Ftoc.json&WT.mc_id=AZ-MVP-5004796",children:"managed identity"})," is a special type of service principal that eliminates the need for developers to manage credentials."]})]}),"\n",(0,r.jsx)(i.p,{children:"This really started for me when I migrated a Terraform pipeline from OAuth (client ID + secret) to WIF in Azure DevOps. The change itself was easy \u2013 tweak the auth step, remove the secret, done."}),"\n",(0,r.jsx)(i.p,{children:"But then a weird issue cropped up in a long\u2011running Azure API Management + Application Gateway deployment. The default 1\u2011hour token lifetime was biting us \u2013 failures were happening mid\u2011deployment (around the 30\u201340 minute mark). Swapping the service connection over to a user\u2011assigned managed identity removed the problem. I\u2019m pretty sure it was a transient platform quirk at the time that\u2019s since been ironed out, but it made me re\u2011examine the operational differences."}),"\n",(0,r.jsx)(i.p,{children:"Fast forward: platform engineering practices, landing zone vending, and self\u2011service infrastructure have matured. That\u2019s where the management characteristics of UAMIs really shine."}),"\n",(0,r.jsx)(i.h2,{id:"userassigned-managed-identity-wif-vs-service-principal-wif",children:"User\u2011Assigned Managed Identity (WIF) vs Service Principal (WIF)"}),"\n",(0,r.jsxs)(i.table,{children:[(0,r.jsx)(i.thead,{children:(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.th,{children:"Aspect"}),(0,r.jsx)(i.th,{children:"User-Assigned Managed Identity (with WIF)"}),(0,r.jsx)(i.th,{children:"Service Principal (with WIF)"}),(0,r.jsx)(i.th,{children:"References"})]})}),(0,r.jsxs)(i.tbody,{children:[(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"Credential management"}),(0,r.jsx)(i.td,{children:"No client secret to store \u2013 Azure manages credentials. Tokens obtained via WIF; no static secret ever exists in your repo or key vault."}),(0,r.jsx)(i.td,{children:"No static secret needed when using WIF (federated credential replaces a secret). Traditionally, it required a client secret or certificate that operators rotated."}),(0,r.jsxs)(i.td,{children:[(0,r.jsx)(i.a,{href:"https://devblogs.microsoft.com/devops/demystifying-service-principals-managed-identities?WT.mc_id=AZ-MVP-5004796",children:"Demystifying Service Principals & Managed Identities"}),"; ",(0,r.jsx)(i.a,{href:"https://learn.microsoft.com/en-us/entra/identity/managed-identities-azure-resources/overview?WT.mc_id=AZ-MVP-5004796",children:"Managed identities overview"})]})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"Provisioning & governance"}),(0,r.jsxs)(i.td,{children:["Created as an Azure resource ",(0,r.jsx)(i.em,{children:"(portal/CLI/ARM/Terraform)"})," inside a subscription/resource group. Anyone with sufficient Azure RBAC (e.g., Contributor) at that scope can create/configure it. Visible in Azure Activity Logs; Azure Policy can allow/deny WIF on UAMIs (built-in policy)."]}),(0,r.jsx)(i.td,{children:"Created by registering an application in Entra ID. Only the app owner or directory roles (Application / Global Administrator, etc.) can add federated credentials. Lives in Entra ID, governed by directory roles & policies rather than Azure RBAC."}),(0,r.jsxs)(i.td,{children:[(0,r.jsx)(i.a,{href:"https://learn.microsoft.com/en-us/entra/workload-id/workload-identity-federation-create-trust-user-assigned-managed-identity?WT.mc_id=AZ-MVP-5004796",children:"Create UAMI trust"}),"; ",(0,r.jsx)(i.a,{href:"https://learn.microsoft.com/en-us/entra/workload-id/workload-identity-federation-block-using-azure-policy?WT.mc_id=AZ-MVP-5004796",children:"Block WIF via Policy"}),"; ",(0,r.jsx)(i.a,{href:"https://learn.microsoft.com/en-us/entra/workload-id/workload-identity-federation-create-trust?WT.mc_id=AZ-MVP-5004796",children:"Create app trust"})]})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"Lifecycle & cleanup"}),(0,r.jsx)(i.td,{children:"Independent lifecycle: must be explicitly deleted. Reusable across workloads. Deleting the UAMI immediately removes its ability to get tokens."}),(0,r.jsx)(i.td,{children:"Persists until manually deleted. Not tied to any Azure resource; can become an orphaned identity if forgotten. Can be multi-tenant (if app is multi-tenant)."}),(0,r.jsxs)(i.td,{children:[(0,r.jsx)(i.a,{href:"https://learn.microsoft.com/en-us/entra/identity/managed-identities-azure-resources/overview?WT.mc_id=AZ-MVP-5004796",children:"Managed identities overview"}),"; ",(0,r.jsx)(i.a,{href:"https://devblogs.microsoft.com/devops/demystifying-service-principals-managed-identities?WT.mc_id=AZ-MVP-5004796",children:"Demystifying Service Principals & Managed Identities"})]})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"Least privilege & isolation"}),(0,r.jsx)(i.td,{children:"You can create one UAMI per workload/environment; assign only minimal Azure RBAC roles. No secrets to leak or rotate. Strong isolation via scoping and deletion."}),(0,r.jsx)(i.td,{children:"You can create multiple SPs, but all reside in the same tenant. Permissions are entirely from assigned roles. If not cleaned up, it may retain access indefinitely. Requires diligence to avoid privilege creep."}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.a,{href:"https://devblogs.microsoft.com/devops/demystifying-service-principals-managed-identities?WT.mc_id=AZ-MVP-5004796",children:"Demystifying Service Principals & Managed Identities"})})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"Federated identity configuration"}),(0,r.jsxs)(i.td,{children:["Add Federated Credential to the UAMI ",(0,r.jsx)(i.em,{children:"(portal/CLI)"}),". Up to 20 per identity. Must exactly match issuer & subject (e.g., GitHub repo / env). Propagation delay can cause brief initial failures (AADSTS70021)."]}),(0,r.jsx)(i.td,{children:"Add Federated Credential under App Registration > Certificates & secrets > Federated credentials. Same 20 limit & exact-match rules. Requires an appropriate Entra role or ownership. Pipelines use Client ID + Tenant ID (no secret)."}),(0,r.jsxs)(i.td,{children:[(0,r.jsx)(i.a,{href:"https://learn.microsoft.com/en-us/entra/workload-id/workload-identity-federation-create-trust?WT.mc_id=AZ-MVP-5004796",children:"Create app trust"}),"; ",(0,r.jsx)(i.a,{href:"https://learn.microsoft.com/en-us/entra/workload-id/workload-identity-federation-considerations?WT.mc_id=AZ-MVP-5004796",children:"WIF considerations"})]})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"Conditional Access & policies"}),(0,r.jsxs)(i.td,{children:["No Conditional Access support today ",(0,r.jsx)(i.em,{children:"(cannot enforce CA like MFA, IP filters)"}),". Can be targeted by some governance (e.g., access reviews) but not CA enforcement."]}),(0,r.jsx)(i.td,{children:"Supports Conditional Access (block by IP, require compliant device, etc.). Choose this when CA or advanced governance is mandatory."}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.a,{href:"https://learn.microsoft.com/en-us/entra/identity/conditional-access/workload-identity?WT.mc_id=AZ-MVP-5004796",children:"Conditional Access for workload identities"})})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"Logging & traceability"}),(0,r.jsx)(i.td,{children:"Azure Activity Log records create/update/role assignment operations. Entra ID sign-in logs show each WIF token issuance for the UAMI\u2019s client ID."}),(0,r.jsx)(i.td,{children:"Entra ID audit logs capture app creation/updates; sign-in logs show each federated token plus Conditional Access decisions."}),(0,r.jsxs)(i.td,{children:[(0,r.jsx)(i.a,{href:"https://learn.microsoft.com/en-us/entra/identity/managed-identities-azure-resources/overview",children:"Managed identities overview"}),"; ",(0,r.jsx)(i.a,{href:"https://learn.microsoft.com/en-us/entra/identity/conditional-access/workload-identity?WT.mc_id=AZ-MVP-5004796",children:"Conditional Access for workload identities"})]})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"Azure DevOps / GitHub integration"}),(0,r.jsxs)(i.td,{children:["Fully supported: Azure DevOps service connections & GitHub Actions (",(0,r.jsx)(i.code,{children:"azure/login"}),") can authenticate with UAMI using WIF once federated credentials are configured."]}),(0,r.jsx)(i.td,{children:"Fully supported: Most docs historically show SP path; create federated credential on App Registration and use its client ID. Works identically in pipelines."}),(0,r.jsxs)(i.td,{children:[(0,r.jsx)(i.a,{href:"https://devblogs.microsoft.com/devops/workload-identity-federation-for-azure-deployments-is-now-generally-available?WT.mc_id=AZ-MVP-5004796",children:"WIF for Azure deployments GA"}),"; ",(0,r.jsx)(i.a,{href:"https://learn.microsoft.com/en-us/azure/developer/github/connect-from-azure-openid-connect?WT.mc_id=AZ-MVP-5004796",children:"GitHub Actions OIDC to Azure"}),"; ",(0,r.jsx)(i.a,{href:"https://github.com/Azure/login",children:"Azure/login action"})]})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"Future direction (MS guidance)"}),(0,r.jsx)(i.td,{children:'Aligns with Microsoft\u2019s "secret-free" push; recommended for credential-free automation where feasible. Also encouraged to adopt WIF (secretless), as it remains required for scenarios that need Conditional Access, multi-tenant, or cross-cloud functionality.'}),(0,r.jsxs)(i.td,{children:[(0,r.jsx)(i.a,{href:"https://learn.microsoft.com/en-us/entra/identity/managed-identities-azure-resources/overview?WT.mc_id=AZ-MVP-5004796",children:"Managed identities overview"}),"; ",(0,r.jsx)(i.a,{href:"https://devblogs.microsoft.com/devops/workload-identity-federation-for-azure-deployments-is-now-generally-available?WT.mc_id=AZ-MVP-5004796",children:"WIF for Azure deployments GA"}),"; ",(0,r.jsx)(i.a,{href:"https://learn.microsoft.com/en-us/entra/identity/conditional-access/workload-identity?WT.mc_id=AZ-MVP-5004796",children:"Conditional Access for workload identities"}),"; ",(0,r.jsx)(i.a,{href:"https://learn.microsoft.com/en-us/entra/workload-id/workload-identity-federation-create-trust?WT.mc_id=AZ-MVP-5004796",children:"Create app trust"})]}),(0,r.jsx)(i.td,{})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"Regional / feature constraints"}),(0,r.jsxs)(i.td,{children:["Some regions ",(0,r.jsx)(i.em,{children:"(e.g. at time of writing New Zealand North)"})," lack certain WIF support nuances\u2014verify availability."]}),(0,r.jsx)(i.td,{children:"Available wherever App Registrations & WIF are supported (global tenant scope)."}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.a,{href:"https://learn.microsoft.com/en-us/entra/workload-id/workload-identity-federation-considerations?WT.mc_id=AZ-MVP-5004796",children:"WIF considerations"})})]})]})]}),"\n",(0,r.jsx)(i.p,{children:"Both approaches (UAMI + WIF or Service Principal + WIF) remove static credentials. The decision usually comes down to governance and operational fit."}),"\n",(0,r.jsxs)(i.p,{children:["Pick a ",(0,r.jsx)(i.strong,{children:"User\u2011Assigned Managed Identity + WIF"})," when:"]}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"You want per\u2011environment / per\u2011workload isolation without extra directory overhead."}),"\n",(0,r.jsx)(i.li,{children:"Azure RBAC alone is enough (no Conditional Access requirement)."}),"\n",(0,r.jsx)(i.li,{children:"You prefer lifecycle clarity: delete the Azure resource -> access ends."}),"\n",(0,r.jsx)(i.li,{children:"You want platform or subscription contributors (not Entra admins) to self\u2011service."}),"\n"]}),"\n",(0,r.jsxs)(i.p,{children:["Choose a ",(0,r.jsxs)(i.strong,{children:["Service Principal ",(0,r.jsx)(i.em,{children:"(App Registration)"})," + WIF"]})," when:"]}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"You must enforce Conditional Access (IP restrictions, token protection, compliant device, etc.)."}),"\n",(0,r.jsx)(i.li,{children:"You need multi\u2011tenant or cross\u2011cloud scenarios."}),"\n",(0,r.jsx)(i.li,{children:"Central directory governance (access reviews, app consent workflows) is mandated."}),"\n",(0,r.jsx)(i.li,{children:"Organisation policy limits managed identity creation or requires app registration cataloguing."}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:"Regardless of path:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Keep least privilege tight (scope RBAC to subscription / RG / resource as needed)."}),"\n",(0,r.jsx)(i.li,{children:"Monitor Entra sign\u2011in logs (filter on workload identities) for anomalous patterns."}),"\n",(0,r.jsx)(i.li,{children:"Prefer WIF over secrets for anything new \u2013 reduce secret rotation toil."}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:"My bias? Management. Service principals pile up. App registrations linger, occasionally over\u2011privileged, long after the workload is gone. A UAMI is a first\u2011class Azure resource \u2013 visible, taggable, policy\u2011scannable, and easy to clean up as part of the infrastructure lifecycle."}),"\n",(0,r.jsx)(i.p,{children:"Here\u2019s a conceptual high\u2011level view in a platform engineering/landing zone vending model:"}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.img,{alt:"User Assigned Managed Identity - Platform",src:t(104).A+"",width:"1536",height:"1024"})}),"\n",(0,r.jsxs)(i.p,{children:["In this pattern, a platform\u2011owned UAMI ",(0,r.jsx)(i.em,{children:"(in a Management or Platform subscription)"})," is responsible for:"]}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Creating new subscriptions for application landing zones."}),"\n",(0,r.jsx)(i.li,{children:"Creating required RBAC (role-based access control) groups."}),"\n",(0,r.jsx)(i.li,{children:"Standing up shared prerequisite resources (for example, standard hub / VNet constructs)."}),"\n",(0,r.jsx)(i.li,{children:"Creating a second, landing\u2011zone\u2011scoped UAMI for the application team."}),"\n"]}),"\n",(0,r.jsxs)(i.p,{children:["That second identity is what the application or infrastructure pipelines use. Sometimes I\u2019ll split it further: one identity for Terraform plan (read + validate) and another for apply (write). Those identities are good candidates to wrap with ",(0,r.jsx)(i.a,{href:"https://learn.microsoft.com/azure/azure-resource-manager/bicep/deployment-stacks?tabs=azure-powershell&WT.mc_id=AZ-MVP-5004796",children:"Deployment Stacks"})," to help guard against accidental deletion."]}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.img,{alt:"User Assigned Managed Identity",src:t(67275).A+"",width:"1121",height:"291"})}),"\n",(0,r.jsx)(i.p,{children:'Neither option is "wrong"; in my opinion, a UAMI often keeps things cleaner and closer to the Azure resource lifecycle that your platform teams already manage.'})]})}function p(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},104:(e,i,t)=>{t.d(i,{A:()=>n});const n=t.p+"assets/images/uami-platform-hld-8230d0e3dc1db4ee0bc0c2692f918db7.png"},67275:(e,i,t)=>{t.d(i,{A:()=>n});const n=t.p+"assets/images/uami-platformcreate-3c09981205656e022622f49db718fed6.png"},28453:(e,i,t)=>{t.d(i,{R:()=>a,x:()=>o});var n=t(96540);const r={},s=n.createContext(r);function a(e){const i=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),n.createElement(s.Provider,{value:i},e.children)}},21624:e=>{e.exports=JSON.parse('{"permalink":"/azure/umispn","source":"@site/blog/2025-09-05-umispn/index.mdx","title":"User-Assigned Managed Identity vs Service Principal (WIF)","description":"Explore the differences between User-Assigned Managed Identity and Service Principal with WIF for streamlined Azure deployments and governance.","date":"2025-09-05T00:41:09.915Z","tags":[{"inline":true,"label":"Azure","permalink":"/tags/azure"}],"readingTime":8.97,"hasTruncateMarker":true,"authors":[{"name":"Luke Murray","title":"Author","url":"https://luke.geek.nz","imageURL":"https://luke.geek.nz/img/logo.png","key":"Luke","page":null}],"frontMatter":{"title":"User-Assigned Managed Identity vs Service Principal (WIF)","metaDescription":"When to choose a user-assigned managed identity over a service principal for Azure DevOps, Terraform, and landing zone automation using workload identity federation.","tags":["Azure"],"categories":["Azure"],"authors":["Luke"],"slug":"azure/umispn","keywords":["Azure","Managed Identity","User Assigned Managed Identity","Service Principal","Workload Identity Federation","Azure DevOps","GitHub Actions","Terraform","Platform Engineering"],"description":"Explore the differences between User-Assigned Managed Identity and Service Principal with WIF for streamlined Azure deployments and governance.","date":"2025-09-05T00:41:09.915Z"},"unlisted":false,"nextItem":{"title":"MCP Server with Azure Functions & Communication Services","permalink":"/azure/communication-services-mcp-email-server"}}')}}]);