"use strict";(self.webpackChunklukemurraynz=self.webpackChunklukemurraynz||[]).push([[85607],{27605:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var a=n(7175),o=n(74848),t=n(28453);const i={title:"Azure Region Provider Comparison",metaDescription:"Compare the capabilities and services available in the new Azure region for example, New Zealand North, with those in Australia East.",date:new Date("2024-11-30T08:14:09.250Z"),tags:["Azure"],categories:["Azure"],authors:["Luke"],slug:"azure/azure-region-provider-comparison",keywords:["azure","nznorth","australiaeast","azure regions","provider namespaces","service availability","cloud comparison"],description:"Compare the capabilities and services available in the new Azure region, for example, New Zealand North, with those in Australia East."},s=void 0,l={authorsImageUrls:[void 0]},c=[];function d(e){const r={a:"a",admonition:"admonition",code:"code",em:"em",img:"img",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(r.p,{children:["With the release of the ",(0,o.jsx)(r.a,{href:"https://datacenters.microsoft.com/globe/explore?info=region_newzealandnorth",children:"New Zealand North"})," Azure Region on the horizon, I wanted a way to measure what capabilities are being deployed in the new region that could be used, particularly in comparison to Australia East."]}),"\n",(0,o.jsxs)(r.p,{children:["To do so, I wrote a script that uses ",(0,o.jsx)(r.a,{href:"https://learn.microsoft.com/powershell/scripting/overview?view=powershell-7.4&WT.mc_id=AZ-MVP-5004796",children:"PowerShell"})," to query the ",(0,o.jsx)(r.a,{href:"https://learn.microsoft.com/en-us/azure/azure-resource-manager/management/azure-services-resource-providers?WT.mc_id=AZ-MVP-5004796",children:"provider namespaces"})," of each ",(0,o.jsx)(r.a,{href:"https://azure.microsoft.com/explore/global-infrastructure/products-by-region?WT.mc_id=AZ-MVP-5004796#products-by-region_tab4",children:"region"}),", compare them side by side, and output the results into an HTML table."]}),"\n",(0,o.jsx)(r.p,{children:(0,o.jsx)(r.img,{alt:"Azure Region Provider Comparison",src:n(20470).A+"",width:"1512",height:"530"})}),"\n",(0,o.jsxs)(r.p,{children:["There are bound to be differences between the regions, especially when Strategic Services, such as Azure OpenAI ",(0,o.jsx)(r.em,{children:"(Cognitive Services)"}),", are involved, especially for such a new region, especially at the time of writing when it's possible not all Foundational and Mainstream services have been deployed."]}),"\n",(0,o.jsx)(r.admonition,{type:"warning",children:(0,o.jsxs)(r.p,{children:["Using the Providers is not a full-proof way of comparing the regions; however, for my purposes, it largely helps to identify the capabilities, especially when compared to the ",(0,o.jsx)(r.a,{href:"https://learn.microsoft.com/en-us/azure/azure-resource-manager/management/azure-services-resource-providers?WT.mc_id=AZ-MVP-5004796",children:"Azure services table"}),". Its also worth mentioning, that this comparison won't touch on some services or capabilities, that may be may have preview capabilities delivered to specific regions as a sub-feature of that namespace."]})}),"\n",(0,o.jsx)(r.p,{children:"The PowerShell script can be found below:"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-powershell",metastring:'title="RegionProvider_Compare.ps1"',children:'# Get the current date in an easy-to-read format\n$currentDate = Get-Date -Format "MMMM dd, yyyy"\n\n[string]$location1 = "New Zealand North"\n[string]$location2 = "Australia East"\n\n\n\nfunction Get-ProviderNamespaces {\n    param (\n        [string]$location\n    )\n\n    # Validate location parameter\n    if (-not $location) {\n        throw "Location parameter is required."\n    }\n\n    try {\n        $providers = Get-AzResourceProvider\n        $providerNamespaces = @()\n\n        foreach ($provider in $providers) {\n            $providerNamespace = $provider.ProviderNamespace\n            $resourceTypes = $provider.ResourceTypes | Where-Object { $_.Locations -contains $location }\n            \n            if ($resourceTypes) {\n                $providerNamespaces += $providerNamespace\n            }\n        }\n\n        return $providerNamespaces | Sort-Object -Unique\n    }\n    catch {\n        Write-Error "Failed to get provider namespaces for location $location : $_"\n        throw\n    }\n}\n\nfunction Create-ComparisonTable {\n    param (\n        [array]$providerNamespaces1,\n        [array]$providerNamespaces2\n    )\n    $table = @()\n    $maxLength = [math]::Max($providerNamespaces1.Count, $providerNamespaces2.Count)\n\n    for ($i = 0; $i -lt $maxLength; $i++) {\n        $provider1 = if ($i -lt $providerNamespaces1.Count) { $providerNamespaces1[$i] } else { "" }\n        $provider2 = if ($i -lt $providerNamespaces2.Count) { $providerNamespaces2[$i] } else { "" }\n        $missingInLocation1 = if ($provider2 -and -not $providerNamespaces1.Contains($provider2)) { $provider2.Trim() } else { "" }\n\n        if ($provider1 -or $provider2 -or $missingInLocation1) {\n            $table += [PSCustomObject]@{\n                "$location1 ($($providerNamespaces1.Count))" = $provider1\n                "$location2 ($($providerNamespaces2.Count))"    = $provider2\n                "Missing in $location1"                      = $missingInLocation1\n            }\n        }\n    }\n\n    return $table\n}\n\n# Generate the HTML report with the date in the title\nfunction Generate-HTMLReport {\n    param (\n        [array]$comparisonTable,\n        [string]$location1,\n        [string]$location2\n    )\n\n    $html = @"\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Azure Provider Namespaces Comparison - $currentDate</title>\n    <style>\n        table { \n            width: 100%; \n            border-collapse: collapse; \n            font-family: Arial, sans-serif; \n            margin: 20px 0; \n            border-radius: 5px 5px 0 0; \n            overflow: hidden; \n            box-shadow: 0 0 20px rgba(0, 0, 0, 0.15); \n        }\n        th, td { \n            padding: 12px 15px; \n            text-align: left; \n        }\n        th { \n            text-transform: uppercase; \n            font-weight: bold; \n        }\n        th:nth-child(1) { \n            background-color: #4CAF50; \n            color: white; \n        }\n        th:nth-child(2) { \n            background-color: #2196F3; \n            color: white; \n        }\n        th:nth-child(3) { \n            background-color: #FF9800; \n            color: white; \n        }\n        tr { \n            border-bottom: 1px solid #dddddd; \n        }\n        tr:nth-child(even) { \n            background-color: #f3f3f3; \n        }\n        tr:last-child { \n            border-bottom: 2px solid #009879; \n        }\n        tr:hover { \n            background-color: #f1f1f1; \n        }\n    </style>\n</head>\n<body>\n    <h1>Azure Provider Namespaces Comparison</h1>\n    <p>Comparison of <a href="https://learn.microsoft.com/en-us/azure/azure-resource-manager/management/azure-services-resource-providers?WT.mc_id=AZ-MVP-5004796">provider namespaces</a> between <strong>$location1</strong> and <strong>$location2</strong> as of $currentDate.</p>\n    <table>\n        <tr>\n            <th>$location1 ($($providerNamespaces1.Count))</th>\n            <th>$location2 ($($providerNamespaces2.Count))</th>\n            <th>Missing in $location1</th>\n        </tr>\n"@\n\n    foreach ($row in $comparisonTable) {\n        $html += "<tr>"\n        $html += "<td>$($row."$location1 ($($providerNamespaces1.Count))")</td>"\n        $html += "<td>$($row."$location2 ($($providerNamespaces2.Count))")</td>"\n        $html += "<td>$($row."Missing in $location1")</td>"\n        $html += "</tr>"\n    }\n\n    $html += @"\n    </table>\n    <h2>Service Categories</h2>\n    <ul>\n        <li><strong><a href="https://learn.microsoft.com/azure/reliability/availability-service-by-category?WT.mc_id=AZ-MVP-5004796#available-services-by-region-category">Foundational</a></strong>: Available in all recommended and alternate regions when the region is generally available, or within 90 days of a new foundational service becoming generally available.</li>\n        <li><strong><a href="https://learn.microsoft.com/azure/reliability/availability-service-by-category?WT.mc_id=AZ-MVP-5004796#available-services-by-region-category">Mainstream</a></strong>: Available in all recommended regions within 90 days of the region general availability. Demand-driven in alternate regions, and many are already deployed into a large subset of alternate regions.</li>\n        <li><strong><a href="https://learn.microsoft.com/azure/reliability/availability-service-by-category?WT.mc_id=AZ-MVP-5004796#strategic-services">Strategic</a></strong>: Targeted service offerings, often industry-focused or backed by customized hardware. Demand-driven availability across regions.</li>\n    </ul>\n    <p>Note: The rollout schedule for services may vary based on their category and region, with Foundational Services being prioritized for early adoption, followed by Mainstream services (+90 days after GA), and finally Strategic services as demand requirements. Make sure you let your Microsoft account team know if a Strategic Service is required in your region.</p>\n</body>\n</html>\n"@\n\n    return $html\n}\n\n# Main script execution\ntry {\n    Write-Host "Fetching provider namespaces for $location1 and $location2 ..." -ForegroundColor Green\n\n    $providerNamespaces1 = Get-ProviderNamespaces -location $location1\n    $providerNamespaces2 = Get-ProviderNamespaces -location $location2\n\n    $comparisonTable = Create-ComparisonTable -providerNamespaces1 $providerNamespaces1 -providerNamespaces2 $providerNamespaces2\n\n    Write-Host "Generating HTML report..." -ForegroundColor Green\n    $htmlReport = Generate-HTMLReport -comparisonTable $comparisonTable -location1 $location1 -location2 $location2\n\n    $reportPath = "AzureProviderComparisonReport.html"\n    $htmlReport | Out-File -FilePath $reportPath\n\n    Write-Host "HTML report generated at $reportPath" -ForegroundColor Green\n}\ncatch {\n    Write-Error "An error occurred: $_"\n}\n'})}),"\n",(0,o.jsxs)(r.p,{children:["It will output an HTML report in the directory that the script has been run from ",(0,o.jsxs)(r.em,{children:["(make sure you are authenticated to Azure first and have the ",(0,o.jsx)(r.a,{href:"https://learn.microsoft.com/powershell/azure/new-azureps-module-az?view=azps-13.0.0&WT.mc_id=AZ-MVP-5004796",children:"Az PowerShell"})," modules installed)"]}),":"]}),"\n",(0,o.jsx)(r.p,{children:(0,o.jsx)(r.img,{alt:"Azure Region Provider Comparison",src:n(78348).A+"",width:"6000",height:"10192"})})]})}function p(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},20470:(e,r,n)=>{n.d(r,{A:()=>a});const a=n.p+"assets/images/RegionCompare_AustraliaVsNZN-a55f12104031992070b5ce87e173f82a.png"},78348:(e,r,n)=>{n.d(r,{A:()=>a});const a=n.p+"assets/images/RegionCompare_HTMLReport-c06d337c9e48530f9941b6a8d48e855b.jpg"},28453:(e,r,n)=>{n.d(r,{R:()=>i,x:()=>s});var a=n(96540);const o={},t=a.createContext(o);function i(e){const r=a.useContext(t);return a.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function s(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),a.createElement(t.Provider,{value:r},e.children)}},7175:e=>{e.exports=JSON.parse('{"permalink":"/azure/azure-region-provider-comparison","source":"@site/blog/2024-11-30-provider-region-comparison/index.mdx","title":"Azure Region Provider Comparison","description":"Compare the capabilities and services available in the new Azure region, for example, New Zealand North, with those in Australia East.","date":"2024-11-30T08:14:09.250Z","tags":[{"inline":true,"label":"Azure","permalink":"/tags/azure"}],"readingTime":4.09,"hasTruncateMarker":true,"authors":[{"name":"Luke Murray","title":"Author","url":"https://luke.geek.nz","imageURL":"https://luke.geek.nz/img/logo.png","key":"Luke","page":null}],"frontMatter":{"title":"Azure Region Provider Comparison","metaDescription":"Compare the capabilities and services available in the new Azure region for example, New Zealand North, with those in Australia East.","date":"2024-11-30T08:14:09.250Z","tags":["Azure"],"categories":["Azure"],"authors":["Luke"],"slug":"azure/azure-region-provider-comparison","keywords":["azure","nznorth","australiaeast","azure regions","provider namespaces","service availability","cloud comparison"],"description":"Compare the capabilities and services available in the new Azure region, for example, New Zealand North, with those in Australia East."},"unlisted":false,"nextItem":{"title":"Request is badly formatted Error with Azure OpenAI","permalink":"/azure/openai-request-badly-formatted"}}')}}]);